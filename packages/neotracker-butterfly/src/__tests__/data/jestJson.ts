/* tslint:disable: no-null-keyword no-invalid-template-strings trailing-comma */
export const simpleFailedTest = {
  numFailedTestSuites: 2,
  numFailedTests: 8,
  numPassedTestSuites: 0,
  numPassedTests: 6,
  numPendingTestSuites: 0,
  numPendingTests: 0,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 2,
  numTotalTests: 14,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: true,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 1,
    filesUpdated: 0,
    matched: 63,
    total: 70,
    unchecked: 7,
    uncheckedKeysByFile: [
      {
        keys: ['thing'],
        filePath: ['sample', 'sample'],
      },
    ],
    unmatched: 7,
    updated: 0,
  },
  startTime: 1532553707527,
  success: false,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['Jest Check'],
          failureMessages: [
            'Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-butterfly/src/__tests__/unit/checks/jest.test.ts:135:15)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)',
          ],
          fullName: 'Jest Check success result',
          location: null,
          status: 'failed',
          title: 'success result',
        },
        {
          ancestorTitles: ['Jest Check'],
          failureMessages: [
            'Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-butterfly/src/__tests__/unit/checks/jest.test.ts:153:19)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)',
          ],
          fullName: 'Jest Check failing result',
          location: null,
          status: 'failed',
          title: 'failing result',
        },
      ],
      endTime: 1532553710189,
      message:
        "  ● Jest Check › success result\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      133 |     // } as any);\n      134 | \n    > 135 |     expect(0).toBe(1);\n          |               ^\n      136 |   });\n      137 | \n      138 |   test('failing result', async () => {\n\n      at Object.test (packages/neotracker-butterfly/src/__tests__/unit/checks/jest.test.ts:135:15)\n\n  ● Jest Check › failing result\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      151 |      *   conclusion: string\n      152 |      **/\n    > 153 |     expect(false).toBe(true);\n          |                   ^\n      154 |   });\n      155 | });\n      156 | \n\n      at Object.test (packages/neotracker-butterfly/src/__tests__/unit/checks/jest.test.ts:153:19)\n",
      name: '/Users/davem/projects/neotracker/packages/neotracker-butterfly/src/__tests__/unit/checks/jest.test.ts',
      startTime: 1532553707964,
      status: 'failed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n"import { ContentWrapper } from \'./ContentWrapper\';\n"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
            "Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n\"import { ContentWrapper } from './ContentWrapper';\nconst goodnight = 'Goodnight Moon';\n\"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
          ],
          fullName: 'processFile shared/app/components/explorer/ContentWrapper.example.tsx',
          location: null,
          status: 'failed',
          title: 'shared/app/components/explorer/ContentWrapper.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n"import { ContextProvider, WithContext } from \'./ConstReExportProps\';\nconst value = <WithContext>{({ foo }) => <div>{foo}</div>}</WithContext>;\n"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstReExportProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstReExportProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            "Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n\"import { ClassExportInlineProps } from './ClassExportInlineProps';\n\nfunction foo() {\n  return 'foo';\n}\n\"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
          ],
          fullName: 'processFile __tests__/data/components/ClassExportInlineProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ClassExportInlineProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n"import { ConstExportInlineProps } from \'./ConstExportInlineProps\';\n\nclass Foo {\n  public getFoo(): number {\n    return 1.2;\n  }\n}\nconst foo = new Foo();\n"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInlineProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInlineProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            "Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n\"import { ConstExportInterfaceProps } from './ConstExportInterfaceProps';\n\nconst foo = 'foo';\n\"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInterfaceProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInterfaceProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            "Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \n\"import DefaultExportInterfaceProps from './DefaultExportInterfaceProps';\n\nconst foo = 'foo';\n\"\n\n    at result.examples.forEach.example (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n    at Array.forEach (<anonymous>)\n    at Object.test (/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/davem/projects/neotracker/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
          ],
          fullName: 'processFile __tests__/data/components/DefaultExportInterfaceProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/DefaultExportInterfaceProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [],
          fullName: 'processFile shared/app/components/explorer/ContentWrapper.tsx',
          location: null,
          status: 'passed',
          title: 'shared/app/components/explorer/ContentWrapper.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [],
          fullName: 'processFile __tests__/data/components/ConstReExportProps.tsx',
          location: null,
          status: 'passed',
          title: '__tests__/data/components/ConstReExportProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [],
          fullName: 'processFile __tests__/data/components/ClassExportInlineProps.tsx',
          location: null,
          status: 'passed',
          title: '__tests__/data/components/ClassExportInlineProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [],
          fullName: 'processFile __tests__/data/components/ConstExportInlineProps.tsx',
          location: null,
          status: 'passed',
          title: '__tests__/data/components/ConstExportInlineProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [],
          fullName: 'processFile __tests__/data/components/ConstExportInterfaceProps.tsx',
          location: null,
          status: 'passed',
          title: '__tests__/data/components/ConstExportInterfaceProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [],
          fullName: 'processFile __tests__/data/components/DefaultExportInterfaceProps.tsx',
          location: null,
          status: 'passed',
          title: '__tests__/data/components/DefaultExportInterfaceProps.tsx',
        },
      ],
      endTime: 1532553713755,
      message:
        "  ● processFile › shared/app/components/explorer/ContentWrapper.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import { ContentWrapper } from './ContentWrapper';\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › shared/app/components/explorer/ContentWrapper.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import { ContentWrapper } from './ContentWrapper';\n    const goodnight = 'Goodnight Moon';\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstReExportProps.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import { ContextProvider, WithContext } from './ConstReExportProps';\n    const value = <WithContext>{({ foo }) => <div>{foo}</div>}</WithContext>;\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ClassExportInlineProps.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import { ClassExportInlineProps } from './ClassExportInlineProps';\n\n    function foo() {\n      return 'foo';\n    }\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstExportInlineProps.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import { ConstExportInlineProps } from './ConstExportInlineProps';\n\n    class Foo {\n      public getFoo(): number {\n        return 1.2;\n      }\n    }\n    const foo = new Foo();\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstExportInterfaceProps.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import { ConstExportInterfaceProps } from './ConstExportInterfaceProps';\n\n    const foo = 'foo';\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/DefaultExportInterfaceProps.example.tsx\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    \"import DefaultExportInterfaceProps from './DefaultExportInterfaceProps';\n\n    const foo = 'foo';\n    \"\n\n      64 |       result.examples.forEach((example) => {\n      65 |         expect(example.id).toMatchSnapshot('id');\n    > 66 |         expect(example.code).toMatchSnapshot('NOT CODE');\n         |                              ^\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n      69 |       });\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:66:30)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n",
      name:
        '/Users/davem/projects/neotracker/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts',
      startTime: 1532553707964,
      status: 'failed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};
export const liveGitTestData = {
  numFailedTestSuites: 1,
  numFailedTests: 12,
  numPassedTestSuites: 1,
  numPassedTests: 3,
  numPendingTestSuites: 0,
  numPendingTests: 0,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 2,
  numTotalTests: 15,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: true,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 0,
    filesUpdated: 0,
    matched: 60,
    total: 60,
    unchecked: 10,
    uncheckedKeysByFile: [
      {
        filePath:
          '/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts',
        keys: [
          'processFile __tests__/data/components/ConstReExportProps.tsx: dependencies 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: description 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: displayName 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: id 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: props 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: renderAPI 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: code 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: exampleTemplate 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: id 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: returnText 2',
        ],
      },
    ],
    unmatched: 0,
    updated: 0,
  },
  startTime: 1533164694859,
  success: false,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Passing Test',
          location: null,
          status: 'passed',
          title: 'Passing Test',
        },
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Simple failing unit test',
          location: null,
          status: 'passed',
          title: 'Simple failing unit test',
        },
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Postgres Error',
          location: null,
          status: 'passed',
          title: 'Postgres Error',
        },
      ],
      endTime: 1533164701387,
      message: '',
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-butterfly/src/__tests__/unit/parseJestResults.test.ts',
      startTime: 1533164695349,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile shared/app/components/explorer/ContentWrapper.example.tsx',
          location: null,
          status: 'failed',
          title: 'shared/app/components/explorer/ContentWrapper.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstReExportProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstReExportProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ClassExportInlineProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ClassExportInlineProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInlineProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInlineProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInterfaceProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInterfaceProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/DefaultExportInterfaceProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/DefaultExportInterfaceProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile shared/app/components/explorer/ContentWrapper.tsx',
          location: null,
          status: 'failed',
          title: 'shared/app/components/explorer/ContentWrapper.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstReExportProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstReExportProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ClassExportInlineProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ClassExportInlineProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInlineProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInlineProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInterfaceProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInterfaceProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/DefaultExportInterfaceProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/DefaultExportInterfaceProps.tsx',
        },
      ],
      endTime: 1533164705018,
      message:
        "  ● processFile › shared/app/components/explorer/ContentWrapper.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstReExportProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ClassExportInlineProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstExportInlineProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstExportInterfaceProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/DefaultExportInterfaceProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › shared/app/components/explorer/ContentWrapper.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ConstReExportProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ClassExportInlineProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ConstExportInlineProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ConstExportInterfaceProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/DefaultExportInterfaceProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n",
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts',
      startTime: 1533164695272,
      status: 'failed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};
export const testSnapshotChanges = {
  numFailedTestSuites: 1,
  numFailedTests: 1,
  numPassedTestSuites: 0,
  numPassedTests: 2,
  numPendingTestSuites: 0,
  numPendingTests: 0,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 1,
  numTotalTests: 3,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: true,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 1,
    filesUpdated: 0,
    matched: 1,
    total: 2,
    unchecked: 0,
    uncheckedKeysByFile: [],
    unmatched: 1,
    updated: 0,
  },
  startTime: 1533166568592,
  success: false,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['ActionsUpdater'],
          failureMessages: [
            'Error: expect(value).toMatchSnapshot()\n\nNew snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\nReceived value \nObject {\n  "action": Array [\n    Object {\n      "args_raw": null,\n      "block_id": 10,\n      "id": "0",\n      "index": 0,\n      "message": "foobar",\n      "script_hash": "ab38352559b8b203bde5fddfa0b07d8b2525e132",\n      "transaction_hash": "c6c9cd5cacfaa18921cb0869945fbdeda2d0308f3a7458f7a1c9528c06150cf5",\n      "transaction_id": "0",\n      "transaction_index": 2,\n      "type": "Log",\n    },\n    Object {\n      "args_raw": "[{"type":"String","value":"foobar"}]",\n      "block_id": 10,\n      "id": "1",\n      "index": 1,\n      "message": null,\n      "script_hash": "ab38352559b8b203bde5fddfa0b07d8b2525e132",\n      "transaction_hash": "c6c9cd5cacfaa18921cb0869945fbdeda2d0308f3a7458f7a1c9528c06150cf5",\n      "transaction_id": "0",\n      "transaction_index": 2,\n      "type": "Notification",\n    },\n  ],\n  "address": Array [],\n  "addressToTransaction": Array [],\n  "addressToTransfer": Array [],\n  "asset": Array [],\n  "assetToTransaction": Array [],\n  "block": Array [],\n  "coin": Array [],\n  "contract": Array [],\n  "dataPoint": Array [],\n  "migration": Array [],\n  "processedIndex": Array [],\n  "transaction": Array [],\n  "transactionInputOutput": Array [],\n  "transfer": Array [],\n}\n\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:46:20)',
          ],
          fullName: 'ActionsUpdater inserts actions',
          location: null,
          status: 'failed',
          title: 'inserts actions',
        },
        {
          ancestorTitles: ['ActionsUpdater'],
          failureMessages: [],
          fullName: 'ActionsUpdater handles duplicate inserts',
          location: null,
          status: 'passed',
          title: 'handles duplicate inserts',
        },
        {
          ancestorTitles: ['ActionsUpdater'],
          failureMessages: [],
          fullName: 'ActionsUpdater reverts actions',
          location: null,
          status: 'passed',
          title: 'reverts actions',
        },
      ],
      endTime: 1533166578423,
      message:
        '  ● ActionsUpdater › inserts actions\n\n    expect(value).toMatchSnapshot()\n\n    New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.\n\n    This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.\n\n    Received value \n    Object {\n      "action": Array [\n        Object {\n          "args_raw": null,\n          "block_id": 10,\n          "id": "0",\n          "index": 0,\n          "message": "foobar",\n          "script_hash": "ab38352559b8b203bde5fddfa0b07d8b2525e132",\n          "transaction_hash": "c6c9cd5cacfaa18921cb0869945fbdeda2d0308f3a7458f7a1c9528c06150cf5",\n          "transaction_id": "0",\n          "transaction_index": 2,\n          "type": "Log",\n        },\n        Object {\n          "args_raw": "[{"type":"String","value":"foobar"}]",\n          "block_id": 10,\n          "id": "1",\n          "index": 1,\n          "message": null,\n          "script_hash": "ab38352559b8b203bde5fddfa0b07d8b2525e132",\n          "transaction_hash": "c6c9cd5cacfaa18921cb0869945fbdeda2d0308f3a7458f7a1c9528c06150cf5",\n          "transaction_id": "0",\n          "transaction_index": 2,\n          "type": "Notification",\n        },\n      ],\n      "address": Array [],\n      "addressToTransaction": Array [],\n      "addressToTransfer": Array [],\n      "asset": Array [],\n      "assetToTransaction": Array [],\n      "block": Array [],\n      "coin": Array [],\n      "contract": Array [],\n      "dataPoint": Array [],\n      "migration": Array [],\n      "processedIndex": Array [],\n      "transaction": Array [],\n      "transactionInputOutput": Array [],\n      "transfer": Array [],\n    }\n\n      44 | \n      45 |     const dbData = await getDBData(db);\n    > 46 |     expect(dbData).toMatchSnapshot(\'abcde\');\n         |                    ^\n      47 |   });\n      48 | \n      49 |   test(\'handles duplicate inserts\', async () => {\n\n      at Object.test (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:46:20)\n',
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts',
      startTime: 1533166568658,
      status: 'failed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};
export const liveGitTestData2 = {
  numFailedTestSuites: 1,
  numFailedTests: 12,
  numPassedTestSuites: 1,
  numPassedTests: 4,
  numPendingTestSuites: 0,
  numPendingTests: 0,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 2,
  numTotalTests: 16,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: true,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 0,
    filesUpdated: 0,
    matched: 60,
    total: 60,
    unchecked: 10,
    uncheckedKeysByFile: [
      {
        filePath:
          '/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts',
        keys: [
          'processFile __tests__/data/components/ConstReExportProps.tsx: dependencies 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: description 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: displayName 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: id 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: props 2',
          'processFile __tests__/data/components/ConstReExportProps.tsx: renderAPI 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: code 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: exampleTemplate 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: id 2',
          'processFile shared/app/components/explorer/ContentWrapper.example.tsx: returnText 2',
        ],
      },
    ],
    unmatched: 0,
    updated: 0,
  },
  startTime: 1533166452556,
  success: false,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Passing Test',
          location: null,
          status: 'passed',
          title: 'Passing Test',
        },
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Simple failing unit test',
          location: null,
          status: 'passed',
          title: 'Simple failing unit test',
        },
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Postgres Error',
          location: null,
          status: 'passed',
          title: 'Postgres Error',
        },
        {
          ancestorTitles: ['GitHub Check Run API Compliance'],
          failureMessages: [],
          fullName: 'GitHub Check Run API Compliance Postgres Error',
          location: null,
          status: 'passed',
          title: 'Postgres Error',
        },
      ],
      endTime: 1533166458454,
      message: '',
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-butterfly/src/__tests__/unit/parseJestResults.test.ts',
      startTime: 1533166452953,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile shared/app/components/explorer/ContentWrapper.example.tsx',
          location: null,
          status: 'failed',
          title: 'shared/app/components/explorer/ContentWrapper.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstReExportProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstReExportProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ClassExportInlineProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ClassExportInlineProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInlineProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInlineProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInterfaceProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInterfaceProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeTruthy()\n\nReceived: false\n    at result.examples.forEach.example (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/DefaultExportInterfaceProps.example.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/DefaultExportInterfaceProps.example.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile shared/app/components/explorer/ContentWrapper.tsx',
          location: null,
          status: 'failed',
          title: 'shared/app/components/explorer/ContentWrapper.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstReExportProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstReExportProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ClassExportInlineProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ClassExportInlineProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInlineProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInlineProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/ConstExportInterfaceProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/ConstExportInterfaceProps.tsx',
        },
        {
          ancestorTitles: ['processFile'],
          failureMessages: [
            'Error: expect(received).toBeGreaterThan(expected)\n\nExpected: 1\nReceived: 0\n    at result.components.forEach.component (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n    at Array.forEach (<anonymous>)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)',
          ],
          fullName: 'processFile __tests__/data/components/DefaultExportInterfaceProps.tsx',
          location: null,
          status: 'failed',
          title: '__tests__/data/components/DefaultExportInterfaceProps.tsx',
        },
      ],
      endTime: 1533166461672,
      message:
        "  ● processFile › shared/app/components/explorer/ContentWrapper.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstReExportProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ClassExportInlineProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstExportInlineProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/ConstExportInterfaceProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › __tests__/data/components/DefaultExportInterfaceProps.example.tsx\n\n    expect(received).toBeTruthy()\n\n    Received: false\n\n      67 |         expect(example.returnText).toMatchSnapshot('returnText');\n      68 |         expect(example.exampleTemplate).toMatchSnapshot('exampleTemplate');\n    > 69 |         expect(false).toBeTruthy();\n         |                       ^\n      70 |       });\n      71 |     });\n      72 |   };\n\n      at result.examples.forEach.example (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:69:23)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:64:23)\n\n  ● processFile › shared/app/components/explorer/ContentWrapper.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ConstReExportProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ClassExportInlineProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ConstExportInlineProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/ConstExportInterfaceProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n\n  ● processFile › __tests__/data/components/DefaultExportInterfaceProps.tsx\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: 1\n    Received: 0\n\n      86 |         expect(component.props).toMatchSnapshot('props');\n      87 |         expect(component.renderAPI).toMatchSnapshot('renderAPI');\n    > 88 |         expect(0).toBeGreaterThan(1);\n         |                   ^\n      89 |       });\n      90 |     });\n      91 |   };\n\n      at result.components.forEach.component (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:88:19)\n          at Array.forEach (<anonymous>)\n      at Object.test (packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts:81:25)\n",
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-component-explorer/src/__tests__/unit/node/component/processFile.test.ts',
      startTime: 1533166452953,
      status: 'failed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};
export const neoOneUnitTests = {
  numFailedTestSuites: 0,
  numFailedTests: 0,
  numPassedTestSuites: 54,
  numPassedTests: 1018,
  numPendingTestSuites: 1,
  numPendingTests: 31,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 55,
  numTotalTests: 1049,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: false,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 0,
    filesUpdated: 0,
    matched: 1459,
    total: 1459,
    unchecked: 0,
    uncheckedKeysByFile: [],
    unmatched: 0,
    updated: 0,
  },
  startTime: 1533162456727,
  success: true,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with initializer',
          location: null,
          status: 'passed',
          title: 'basic class with initializer',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with constructor',
          location: null,
          status: 'passed',
          title: 'basic class with constructor',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with constructor arguments',
          location: null,
          status: 'passed',
          title: 'basic class with constructor arguments',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with default constructor arguments',
          location: null,
          status: 'passed',
          title: 'basic class with default constructor arguments',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with optional constructor arguments',
          location: null,
          status: 'pending',
          title: 'basic class with optional constructor arguments',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with method',
          location: null,
          status: 'passed',
          title: 'basic class with method',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with get accessor',
          location: null,
          status: 'passed',
          title: 'basic class with get accessor',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with set accessor',
          location: null,
          status: 'passed',
          title: 'basic class with set accessor',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class with get/set accessor',
          location: null,
          status: 'passed',
          title: 'basic class with get/set accessor',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class extended with inherited property',
          location: null,
          status: 'passed',
          title: 'basic class extended with inherited property',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class extended with inherited method',
          location: null,
          status: 'passed',
          title: 'basic class extended with inherited method',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class extended with overriden property',
          location: null,
          status: 'passed',
          title: 'basic class extended with overriden property',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class extended with overriden method',
          location: null,
          status: 'passed',
          title: 'basic class extended with overriden method',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class extended with super call',
          location: null,
          status: 'passed',
          title: 'basic class extended with super call',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler basic class extended with super call and void return',
          location: null,
          status: 'passed',
          title: 'basic class extended with super call and void return',
        },
        {
          ancestorTitles: ['ClassDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ClassDeclarationCompiler realistic class inheritance',
          location: null,
          status: 'pending',
          title: 'realistic class inheritance',
        },
      ],
      endTime: 1533162490196,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/declaration/ClassDeclarationCompiler.test.ts',
      startTime: 1533162457224,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.GetTime',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.GetTime',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize/Deserialize array',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize/Deserialize array',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Call',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Call',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize/Deserialize generic',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize/Deserialize generic',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Notify',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Notify',
        },
      ],
      endTime: 1533162499236,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/syscalls.test.ts',
      startTime: 1533162457225,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['TestTranspiledToken'],
          failureMessages: [],
          fullName: 'TestTranspiledToken properties + issue + balanceOf + totalSupply + transfer',
          location: null,
          status: 'passed',
          title: 'properties + issue + balanceOf + totalSupply + transfer',
        },
      ],
      endTime: 1533162505555,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/test/TestTranspiledToken.test.ts',
      startTime: 1533162457281,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['Token'],
          failureMessages: [],
          fullName: 'Token properties + issue + balanceOf + totalSupply + transfer',
          location: null,
          status: 'passed',
          title: 'properties + issue + balanceOf + totalSupply + transfer',
        },
      ],
      endTime: 1533162508070,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/test/Token.test.ts',
      startTime: 1533162457218,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false || false [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'false || false [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true || short-circuit [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'true || short-circuit [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 || 0 [BarBarToken]',
          location: null,
          status: 'passed',
          title: '1 || 0 [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false || 0 [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'false || 0 [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler undefined || 0 [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'undefined || 0 [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(true == false) [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(true == false) [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(undefined == "a") [EqualsEqualsToken]',
          location: null,
          status: 'pending',
          title: '!(undefined == "a") [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(0 == null) [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(0 == null) [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler null == undefined [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'null == undefined [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(true == undefined) [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(true == undefined) [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (false == "a") [EqualsEqualsToken]',
          location: null,
          status: 'pending',
          title: '(false == "a") [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (false == "") [EqualsEqualsToken]',
          location: null,
          status: 'pending',
          title: '(false == "") [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (false == " ")  [EqualsEqualsToken]',
          location: null,
          status: 'pending',
          title: '(false == " ")  [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(false == "a") [EqualsEqualsToken]',
          location: null,
          status: 'pending',
          title: '!(false == "a") [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (3 == "3") [EqualsEqualsToken]',
          location: null,
          status: 'pending',
          title: '(3 == "3") [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(null == true) [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(null == true) [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(null == false) [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(null == false) [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler null == undefined [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'null == undefined [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler null !== true [EqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'null !== true [EqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true != null [ExclamationEqualsToken]',
          location: null,
          status: 'passed',
          title: 'true != null [ExclamationEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true != undefined [ExclamationEqualsToken]',
          location: null,
          status: 'passed',
          title: 'true != undefined [ExclamationEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 4 != 3 [ExclamationEqualsToken]',
          location: null,
          status: 'passed',
          title: '4 != 3 [ExclamationEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 0 != 3 [ExclamationEqualsToken]',
          location: null,
          status: 'passed',
          title: '0 != 3 [ExclamationEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 0 != "a" [ExclamationEqualsToken]',
          location: null,
          status: 'pending',
          title: '0 != "a" [ExclamationEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler undefined != "a" [ExclamationEqualsToken]',
          location: null,
          status: 'pending',
          title: 'undefined != "a" [ExclamationEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (6 & 5) === 4 [AmpersandToken]',
          location: null,
          status: 'passed',
          title: '(6 & 5) === 4 [AmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (12 & 10) === 8 [AmpersandToken]',
          location: null,
          status: 'passed',
          title: '(12 & 10) === 8 [AmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (128 & 2) === 0 [AmpersandToken]',
          location: null,
          status: 'passed',
          title: '(128 & 2) === 0 [AmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (3 | 6) === 7 [BarToken]',
          location: null,
          status: 'passed',
          title: '(3 | 6) === 7 [BarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (19 | -3) === -1 [BarToken]',
          location: null,
          status: 'passed',
          title: '(19 | -3) === -1 [BarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (5 ^ 2) === 7 [CaretToken]',
          location: null,
          status: 'passed',
          title: '(5 ^ 2) === 7 [CaretToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (127 ^ 2) === 125 [CaretToken]',
          location: null,
          status: 'pending',
          title: '(127 ^ 2) === 125 [CaretToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (127 ^ -6) === -123 [CaretToken]',
          location: null,
          status: 'pending',
          title: '(127 ^ -6) === -123 [CaretToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (128 ^ 5) === 133 [CaretToken]',
          location: null,
          status: 'pending',
          title: '(128 ^ 5) === 133 [CaretToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true === true [EqualsEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'true === true [EqualsEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(false === null) [EqualsEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(false === null) [EqualsEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(undefined === null) [EqualsEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(undefined === null) [EqualsEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(undefined === false) [EqualsEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(undefined === false) [EqualsEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(0 === null) [EqualsEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(0 === null) [EqualsEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false === false [EqualsEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'false === false [EqualsEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false !== true [ExclamationEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'false !== true [ExclamationEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false !== null [ExclamationEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: 'false !== null [ExclamationEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 4 !== -4 [ExclamationEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '4 !== -4 [ExclamationEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(42 !== 42) [ExclamationEqualsEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(42 !== 42) [ExclamationEqualsEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (3 ** 2) == 9 [AsteriskAsteriskToken]',
          location: null,
          status: 'pending',
          title: '(3 ** 2) == 9 [AsteriskAsteriskToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (10 ** -2) == 0.01 [AsteriskAsteriskToken]',
          location: null,
          status: 'pending',
          title: '(10 ** -2) == 0.01 [AsteriskAsteriskToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler dog instanceof Animal [InstanceOfKeyword]',
          location: null,
          status: 'passed',
          title: 'dog instanceof Animal [InstanceOfKeyword]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler memory in computer [InKeyword]',
          location: null,
          status: 'pending',
          title: 'memory in computer [InKeyword]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !("nic" in computer) [InKeyword]',
          location: null,
          status: 'pending',
          title: '!("nic" in computer) [InKeyword]',
        },
      ],
      endTime: 1533162514080,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/BinaryExpressionCompiler1.test.ts',
      startTime: 1533162457219,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH0',
          location: null,
          status: 'passed',
          title: 'PUSH0',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES1',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES1',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES2',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES2',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES3',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES3',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES4',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES4',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES5',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES5',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES6',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES6',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES7',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES7',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES8',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES8',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES9',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES9',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES10',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES10',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES11',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES11',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES12',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES12',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES13',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES13',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES14',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES14',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES15',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES15',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES16',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES16',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES17',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES17',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES18',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES18',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES19',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES19',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES20',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES20',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES21',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES21',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES22',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES22',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES23',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES23',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES24',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES24',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES25',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES25',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES26',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES26',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES27',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES27',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES28',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES28',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES29',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES29',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES30',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES30',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES31',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES31',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES32',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES32',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES33',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES33',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES34',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES34',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES35',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES35',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES36',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES36',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES37',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES37',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES38',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES38',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES39',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES39',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES40',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES40',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES41',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES41',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES42',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES42',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES43',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES43',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES44',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES44',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES45',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES45',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES46',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES46',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES47',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES47',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES48',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES48',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES49',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES49',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES50',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES50',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES51',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES51',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES52',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES52',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES53',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES53',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES54',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES54',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES55',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES55',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES56',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES56',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES57',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES57',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES58',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES58',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES59',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES59',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES60',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES60',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES61',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES61',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES62',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES62',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES63',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES63',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES64',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES64',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES65',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES65',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES66',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES66',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES67',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES67',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES68',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES68',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES69',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES69',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES70',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES70',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES71',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES71',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES72',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES72',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES73',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES73',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES74',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES74',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHBYTES75',
          location: null,
          status: 'passed',
          title: 'PUSHBYTES75',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHDATA1',
          location: null,
          status: 'passed',
          title: 'PUSHDATA1',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHDATA2',
          location: null,
          status: 'passed',
          title: 'PUSHDATA2',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSHM1',
          location: null,
          status: 'passed',
          title: 'PUSHM1',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH1',
          location: null,
          status: 'passed',
          title: 'PUSH1',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH2',
          location: null,
          status: 'passed',
          title: 'PUSH2',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH3',
          location: null,
          status: 'passed',
          title: 'PUSH3',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH4',
          location: null,
          status: 'passed',
          title: 'PUSH4',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH5',
          location: null,
          status: 'passed',
          title: 'PUSH5',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH6',
          location: null,
          status: 'passed',
          title: 'PUSH6',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH7',
          location: null,
          status: 'passed',
          title: 'PUSH7',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH8',
          location: null,
          status: 'passed',
          title: 'PUSH8',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH9',
          location: null,
          status: 'passed',
          title: 'PUSH9',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH10',
          location: null,
          status: 'passed',
          title: 'PUSH10',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH11',
          location: null,
          status: 'passed',
          title: 'PUSH11',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH12',
          location: null,
          status: 'passed',
          title: 'PUSH12',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH13',
          location: null,
          status: 'passed',
          title: 'PUSH13',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH14',
          location: null,
          status: 'passed',
          title: 'PUSH14',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH15',
          location: null,
          status: 'passed',
          title: 'PUSH15',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PUSH16',
          location: null,
          status: 'passed',
          title: 'PUSH16',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NOP',
          location: null,
          status: 'passed',
          title: 'NOP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes JMP',
          location: null,
          status: 'passed',
          title: 'JMP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes JMP',
          location: null,
          status: 'passed',
          title: 'JMP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes JMPIF',
          location: null,
          status: 'passed',
          title: 'JMPIF',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes JMPIF',
          location: null,
          status: 'passed',
          title: 'JMPIF',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes JMPIFNOT',
          location: null,
          status: 'passed',
          title: 'JMPIFNOT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes JMPIFNOT',
          location: null,
          status: 'passed',
          title: 'JMPIFNOT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CALL',
          location: null,
          status: 'passed',
          title: 'CALL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CALL',
          location: null,
          status: 'passed',
          title: 'CALL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes APPCALL',
          location: null,
          status: 'passed',
          title: 'APPCALL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes APPCALL',
          location: null,
          status: 'passed',
          title: 'APPCALL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SYSCALL',
          location: null,
          status: 'passed',
          title: 'SYSCALL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes TAILCALL',
          location: null,
          status: 'passed',
          title: 'TAILCALL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes DUPFROMALTSTACK',
          location: null,
          status: 'passed',
          title: 'DUPFROMALTSTACK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes TOALTSTACK',
          location: null,
          status: 'passed',
          title: 'TOALTSTACK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes FROMALTSTACK',
          location: null,
          status: 'passed',
          title: 'FROMALTSTACK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes XDROP',
          location: null,
          status: 'passed',
          title: 'XDROP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes XSWAP',
          location: null,
          status: 'passed',
          title: 'XSWAP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes XTUCK',
          location: null,
          status: 'passed',
          title: 'XTUCK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes DEPTH',
          location: null,
          status: 'passed',
          title: 'DEPTH',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes DROP',
          location: null,
          status: 'passed',
          title: 'DROP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes DUP',
          location: null,
          status: 'passed',
          title: 'DUP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NIP',
          location: null,
          status: 'passed',
          title: 'NIP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes OVER',
          location: null,
          status: 'passed',
          title: 'OVER',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PICK',
          location: null,
          status: 'passed',
          title: 'PICK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes ROLL',
          location: null,
          status: 'passed',
          title: 'ROLL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes ROT',
          location: null,
          status: 'passed',
          title: 'ROT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SWAP',
          location: null,
          status: 'passed',
          title: 'SWAP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes TUCK',
          location: null,
          status: 'passed',
          title: 'TUCK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CAT',
          location: null,
          status: 'passed',
          title: 'CAT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SUBSTR',
          location: null,
          status: 'passed',
          title: 'SUBSTR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes LEFT',
          location: null,
          status: 'passed',
          title: 'LEFT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes RIGHT',
          location: null,
          status: 'passed',
          title: 'RIGHT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SIZE',
          location: null,
          status: 'passed',
          title: 'SIZE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes INVERT',
          location: null,
          status: 'passed',
          title: 'INVERT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes INVERT',
          location: null,
          status: 'passed',
          title: 'INVERT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes AND',
          location: null,
          status: 'passed',
          title: 'AND',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes AND',
          location: null,
          status: 'passed',
          title: 'AND',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes OR',
          location: null,
          status: 'passed',
          title: 'OR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes OR',
          location: null,
          status: 'passed',
          title: 'OR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes OR',
          location: null,
          status: 'passed',
          title: 'OR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes OR',
          location: null,
          status: 'passed',
          title: 'OR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes XOR',
          location: null,
          status: 'passed',
          title: 'XOR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes XOR',
          location: null,
          status: 'passed',
          title: 'XOR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes EQUAL',
          location: null,
          status: 'passed',
          title: 'EQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes EQUAL',
          location: null,
          status: 'passed',
          title: 'EQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes EQUAL',
          location: null,
          status: 'passed',
          title: 'EQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes EQUAL',
          location: null,
          status: 'passed',
          title: 'EQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes INC',
          location: null,
          status: 'passed',
          title: 'INC',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes DEC',
          location: null,
          status: 'passed',
          title: 'DEC',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SIGN',
          location: null,
          status: 'passed',
          title: 'SIGN',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SIGN',
          location: null,
          status: 'passed',
          title: 'SIGN',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SIGN',
          location: null,
          status: 'passed',
          title: 'SIGN',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NEGATE',
          location: null,
          status: 'passed',
          title: 'NEGATE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes ABS',
          location: null,
          status: 'passed',
          title: 'ABS',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NOT',
          location: null,
          status: 'passed',
          title: 'NOT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NZ',
          location: null,
          status: 'passed',
          title: 'NZ',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NZ',
          location: null,
          status: 'passed',
          title: 'NZ',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes ADD',
          location: null,
          status: 'passed',
          title: 'ADD',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SUB',
          location: null,
          status: 'passed',
          title: 'SUB',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes MUL',
          location: null,
          status: 'passed',
          title: 'MUL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes DIV',
          location: null,
          status: 'passed',
          title: 'DIV',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes MOD',
          location: null,
          status: 'passed',
          title: 'MOD',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SHL',
          location: null,
          status: 'passed',
          title: 'SHL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SHL',
          location: null,
          status: 'passed',
          title: 'SHL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SHR',
          location: null,
          status: 'passed',
          title: 'SHR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SHR',
          location: null,
          status: 'passed',
          title: 'SHR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes BOOLAND',
          location: null,
          status: 'passed',
          title: 'BOOLAND',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes BOOLAND',
          location: null,
          status: 'passed',
          title: 'BOOLAND',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes BOOLAND',
          location: null,
          status: 'passed',
          title: 'BOOLAND',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes BOOLOR',
          location: null,
          status: 'passed',
          title: 'BOOLOR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes BOOLOR',
          location: null,
          status: 'passed',
          title: 'BOOLOR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes BOOLOR',
          location: null,
          status: 'passed',
          title: 'BOOLOR',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NUMEQUAL',
          location: null,
          status: 'passed',
          title: 'NUMEQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NUMEQUAL',
          location: null,
          status: 'passed',
          title: 'NUMEQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NUMNOTEQUAL',
          location: null,
          status: 'passed',
          title: 'NUMNOTEQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NUMNOTEQUAL',
          location: null,
          status: 'passed',
          title: 'NUMNOTEQUAL',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes LT',
          location: null,
          status: 'passed',
          title: 'LT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes LT',
          location: null,
          status: 'passed',
          title: 'LT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes GT',
          location: null,
          status: 'passed',
          title: 'GT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes GT',
          location: null,
          status: 'passed',
          title: 'GT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes LTE',
          location: null,
          status: 'passed',
          title: 'LTE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes LTE',
          location: null,
          status: 'passed',
          title: 'LTE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes LTE',
          location: null,
          status: 'passed',
          title: 'LTE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes GTE',
          location: null,
          status: 'passed',
          title: 'GTE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes GTE',
          location: null,
          status: 'passed',
          title: 'GTE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes GTE',
          location: null,
          status: 'passed',
          title: 'GTE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes MIN',
          location: null,
          status: 'passed',
          title: 'MIN',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes MAX',
          location: null,
          status: 'passed',
          title: 'MAX',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes WITHIN',
          location: null,
          status: 'passed',
          title: 'WITHIN',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes WITHIN',
          location: null,
          status: 'passed',
          title: 'WITHIN',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SHA1',
          location: null,
          status: 'passed',
          title: 'SHA1',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SHA256',
          location: null,
          status: 'passed',
          title: 'SHA256',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes HASH160',
          location: null,
          status: 'passed',
          title: 'HASH160',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes HASH256',
          location: null,
          status: 'passed',
          title: 'HASH256',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKSIG',
          location: null,
          status: 'passed',
          title: 'CHECKSIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKSIG',
          location: null,
          status: 'passed',
          title: 'CHECKSIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes VERIFY',
          location: null,
          status: 'passed',
          title: 'VERIFY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes VERIFY',
          location: null,
          status: 'passed',
          title: 'VERIFY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKMULTISIG',
          location: null,
          status: 'passed',
          title: 'CHECKMULTISIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKMULTISIG',
          location: null,
          status: 'passed',
          title: 'CHECKMULTISIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKMULTISIG',
          location: null,
          status: 'passed',
          title: 'CHECKMULTISIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKMULTISIG',
          location: null,
          status: 'passed',
          title: 'CHECKMULTISIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKMULTISIG',
          location: null,
          status: 'passed',
          title: 'CHECKMULTISIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes CHECKMULTISIG',
          location: null,
          status: 'passed',
          title: 'CHECKMULTISIG',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes ARRAYSIZE',
          location: null,
          status: 'passed',
          title: 'ARRAYSIZE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PACK',
          location: null,
          status: 'passed',
          title: 'PACK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes UNPACK',
          location: null,
          status: 'passed',
          title: 'UNPACK',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PICKITEM',
          location: null,
          status: 'passed',
          title: 'PICKITEM',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes PICKITEM',
          location: null,
          status: 'passed',
          title: 'PICKITEM',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SETITEM',
          location: null,
          status: 'passed',
          title: 'SETITEM',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes SETITEM',
          location: null,
          status: 'passed',
          title: 'SETITEM',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NEWARRAY',
          location: null,
          status: 'passed',
          title: 'NEWARRAY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NEWSTRUCT',
          location: null,
          status: 'passed',
          title: 'NEWSTRUCT',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes NEWMAP',
          location: null,
          status: 'passed',
          title: 'NEWMAP',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes APPEND',
          location: null,
          status: 'passed',
          title: 'APPEND',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes REVERSE',
          location: null,
          status: 'passed',
          title: 'REVERSE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes REMOVE',
          location: null,
          status: 'passed',
          title: 'REMOVE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes REMOVE',
          location: null,
          status: 'passed',
          title: 'REMOVE',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes HASKEY',
          location: null,
          status: 'passed',
          title: 'HASKEY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes HASKEY',
          location: null,
          status: 'passed',
          title: 'HASKEY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes HASKEY',
          location: null,
          status: 'passed',
          title: 'HASKEY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes HASKEY',
          location: null,
          status: 'passed',
          title: 'HASKEY',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes KEYS',
          location: null,
          status: 'passed',
          title: 'KEYS',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes VALUES',
          location: null,
          status: 'passed',
          title: 'VALUES',
        },
        {
          ancestorTitles: ['opcodes'],
          failureMessages: [],
          fullName: 'opcodes VALUES',
          location: null,
          status: 'passed',
          title: 'VALUES',
        },
      ],
      endTime: 1533162516265,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-node-vm/src/__tests__/opcodes.test.ts',
      startTime: 1533162508080,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x = 3',
          location: null,
          status: 'passed',
          title: 'x = 3',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x += 3 [PlusEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x += 3 [PlusEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x -= 3 [MinusEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x -= 3 [MinusEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x *= 3 [AsteriskEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x *= 3 [AsteriskEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x /= 3 [SlashEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x /= 3 [SlashEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x **= 3 [AsteriskAsteriskEqualsToken]',
          location: null,
          status: 'pending',
          title: 'x **= 3 [AsteriskAsteriskEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 3 % 3 === 0 [PercentToken]',
          location: null,
          status: 'passed',
          title: '3 % 3 === 0 [PercentToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 4 % 3 === 1 [PercentToken]',
          location: null,
          status: 'passed',
          title: '4 % 3 === 1 [PercentToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x %= 3 [PercentEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x %= 3 [PercentEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x &= 0b001 [AmpersandEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x &= 0b001 [AmpersandEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x |= 0b100 [BarEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x |= 0b100 [BarEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x ^= 0b100 [CaretEqualsToken]',
          location: null,
          status: 'passed',
          title: 'x ^= 0b100 [CaretEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x <<= 1 [LessThanLessThanEqualsToken]',
          location: null,
          status: 'pending',
          title: 'x <<= 1 [LessThanLessThanEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler x >>= 1 [GreaterThanGreaterThanEqualsToken]',
          location: null,
          status: 'pending',
          title: 'x >>= 1 [GreaterThanGreaterThanEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 * 2 == 2 [AsteriskToken]',
          location: null,
          status: 'passed',
          title: '1 * 2 == 2 [AsteriskToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 4 / 2 == 2 [SlashToken]',
          location: null,
          status: 'passed',
          title: '4 / 2 == 2 [SlashToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 4 % 3 == 1 [PercentToken]',
          location: null,
          status: 'passed',
          title: '4 % 3 == 1 [PercentToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 + 2 === 3 [PlusToken:binaryNumeric]',
          location: null,
          status: 'passed',
          title: '1 + 2 === 3 [PlusToken:binaryNumeric]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler "1" + "2" === "12" [PlusToken:StringConcatenation:StrBoth]',
          location: null,
          status: 'passed',
          title: '"1" + "2" === "12" [PlusToken:StringConcatenation:StrBoth]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 + "3" === "13" [PlusToken:StringConcatenation:IntLeftStrRight]',
          location: null,
          status: 'pending',
          title: '1 + "3" === "13" [PlusToken:StringConcatenation:IntLeftStrRight]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler "4" + 2 === "42" [PlusToken:StringConcatenation:StrLeftIntRight]',
          location: null,
          status: 'pending',
          title: '"4" + 2 === "42" [PlusToken:StringConcatenation:StrLeftIntRight]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 - 2 = -1 [MinusToken]',
          location: null,
          status: 'passed',
          title: '1 - 2 = -1 [MinusToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (224 >>> 2) == 56 [GreaterThanGreaterThanGreaterThanToken]',
          location: null,
          status: 'pending',
          title: '(224 >>> 2) == 56 [GreaterThanGreaterThanGreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (128 >> 2) == 32 [GreaterThanGreaterThanToken]',
          location: null,
          status: 'pending',
          title: '(128 >> 2) == 32 [GreaterThanGreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (-234 >> 2) == -59 [GreaterThanGreaterThanToken]',
          location: null,
          status: 'pending',
          title: '(-234 >> 2) == -59 [GreaterThanGreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (128 >> 2) == 32 [GreaterThanGreaterThanToken]',
          location: null,
          status: 'pending',
          title: '(128 >> 2) == 32 [GreaterThanGreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (256 >> -2) == 0 [GreaterThanGreaterThanToken]',
          location: null,
          status: 'pending',
          title: '(256 >> -2) == 0 [GreaterThanGreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (-256 >> -2) == -1 [GreaterThanGreaterThanToken]',
          location: null,
          status: 'pending',
          title: '(-256 >> -2) == -1 [GreaterThanGreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (32 << 2) == 128 [LessThanLessThanToken]',
          location: null,
          status: 'pending',
          title: '(32 << 2) == 128 [LessThanLessThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (-24 << 2) == 96 [LessThanLessThanToken]',
          location: null,
          status: 'pending',
          title: '(-24 << 2) == 96 [LessThanLessThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 < 1 [LessThanToken]',
          location: null,
          status: 'passed',
          title: '1 < 1 [LessThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(1 < 2) [LessThanToken]',
          location: null,
          status: 'passed',
          title: '!(1 < 2) [LessThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(2 <= 1) [LessThanEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(2 <= 1) [LessThanEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 2 <= 2 [LessThanEqualsToken]',
          location: null,
          status: 'passed',
          title: '2 <= 2 [LessThanEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 > 1 [GreaterThanToken]',
          location: null,
          status: 'passed',
          title: '1 > 1 [GreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(2 > 1) [GreaterThanToken]',
          location: null,
          status: 'passed',
          title: '!(2 > 1) [GreaterThanToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler 1 >= 2 [GreaterThanEqualsToken]',
          location: null,
          status: 'passed',
          title: '1 >= 2 [GreaterThanEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(2 >= 2) [GreaterThanEqualsToken]',
          location: null,
          status: 'passed',
          title: '!(2 >= 2) [GreaterThanEqualsToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true && true [AmpersandAmpersandToken]',
          location: null,
          status: 'passed',
          title: 'true && true [AmpersandAmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true && false [AmpersandAmpersandToken]',
          location: null,
          status: 'passed',
          title: 'true && false [AmpersandAmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler !(false && true) [AmpersandAmpersandToken]',
          location: null,
          status: 'passed',
          title: '!(false && true) [AmpersandAmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false && false [AmpersandAmpersandToken]',
          location: null,
          status: 'passed',
          title: 'false && false [AmpersandAmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false && short-circuit [AmpersandAmpersandToken:short-circuit]',
          location: null,
          status: 'passed',
          title: 'false && short-circuit [AmpersandAmpersandToken:short-circuit]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler (0 && true) === 0 [AmpersandAmpersandToken]',
          location: null,
          status: 'passed',
          title: '(0 && true) === 0 [AmpersandAmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler ( true && 3 ) === 3 [AmpersandAmpersandToken]',
          location: null,
          status: 'passed',
          title: '( true && 3 ) === 3 [AmpersandAmpersandToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true || true [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'true || true [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler true || false [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'true || false [BarBarToken]',
        },
        {
          ancestorTitles: ['BinaryExpressionCompiler'],
          failureMessages: [],
          fullName: 'BinaryExpressionCompiler false || true [BarBarToken]',
          location: null,
          status: 'passed',
          title: 'false || true [BarBarToken]',
        },
      ],
      endTime: 1533162516931,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/BinaryExpressionCompiler0.test.ts',
      startTime: 1533162457256,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['execute'],
          failureMessages: [],
          fullName: 'execute should fail kyc transaction with insufficient gas',
          location: null,
          status: 'passed',
          title: 'should fail kyc transaction with insufficient gas',
        },
        {
          ancestorTitles: ['execute'],
          failureMessages: [],
          fullName: 'execute should not fail kyc transaction with sufficient gas',
          location: null,
          status: 'passed',
          title: 'should not fail kyc transaction with sufficient gas',
        },
        {
          ancestorTitles: ['execute'],
          failureMessages: [],
          fullName: 'execute should refund on mintTokens with insufficient presale',
          location: null,
          status: 'passed',
          title: 'should refund on mintTokens with insufficient presale',
        },
        {
          ancestorTitles: ['execute', 'concierge'],
          failureMessages: [],
          fullName: 'execute concierge should add to storage in deploy',
          location: null,
          status: 'passed',
          title: 'should add to storage in deploy',
        },
        {
          ancestorTitles: ['execute', 'concierge'],
          failureMessages: [],
          fullName: 'execute concierge should fail on multiple deploy',
          location: null,
          status: 'passed',
          title: 'should fail on multiple deploy',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens'],
          failureMessages: [],
          fullName: 'execute concierge mintTokens should fail without a sender',
          location: null,
          status: 'passed',
          title: 'should fail without a sender',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens', 'should fail if current exchange rate is 0'],
          failureMessages: [],
          fullName:
            'execute concierge mintTokens should fail if current exchange rate is 0 when whitelist sale period and not whitelisted',
          location: null,
          status: 'passed',
          title: 'when whitelist sale period and not whitelisted',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens', 'should fail if current exchange rate is 0'],
          failureMessages: [],
          fullName:
            'execute concierge mintTokens should fail if current exchange rate is 0 when whitelist sale period and not whitelisted real world',
          location: null,
          status: 'passed',
          title: 'when whitelist sale period and not whitelisted real world',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens', 'should fail if current exchange rate is 0'],
          failureMessages: [],
          fullName:
            'execute concierge mintTokens should fail if current exchange rate is 0 when whitelist sale period and rate not set',
          location: null,
          status: 'passed',
          title: 'when whitelist sale period and rate not set',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens', 'should fail if current exchange rate is 0'],
          failureMessages: [],
          fullName:
            'execute concierge mintTokens should fail if current exchange rate is 0 when pre sale sale period and rate not set',
          location: null,
          status: 'passed',
          title: 'when pre sale sale period and rate not set',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens'],
          failureMessages: [],
          fullName: 'execute concierge mintTokens should mint tokens during whitelist based on exchange rate',
          location: null,
          status: 'passed',
          title: 'should mint tokens during whitelist based on exchange rate',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens'],
          failureMessages: [],
          fullName:
            'execute concierge mintTokens should mint tokens during pre sale based on exchange rate with max tokens',
          location: null,
          status: 'passed',
          title: 'should mint tokens during pre sale based on exchange rate with max tokens',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'mintTokens'],
          failureMessages: [],
          fullName:
            'execute concierge mintTokens should mint tokens during main sale based on exchange rate with total supply cap',
          location: null,
          status: 'passed',
          title: 'should mint tokens during main sale based on exchange rate with total supply cap',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 1 transfers',
          location: null,
          status: 'passed',
          title: 'should handle 1 transfers',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 2 transfers',
          location: null,
          status: 'passed',
          title: 'should handle 2 transfers',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 3 transfers',
          location: null,
          status: 'passed',
          title: 'should handle 3 transfers',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should not handle 4 transfers',
          location: null,
          status: 'passed',
          title: 'should not handle 4 transfers',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should not handle 5 transfers',
          location: null,
          status: 'passed',
          title: 'should not handle 5 transfers',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 4 transfers with 10 gas',
          location: null,
          status: 'passed',
          title: 'should handle 4 transfers with 10 gas',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 5 transfers with 10 gas',
          location: null,
          status: 'passed',
          title: 'should handle 5 transfers with 10 gas',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 6 transfers with 10 gas',
          location: null,
          status: 'passed',
          title: 'should handle 6 transfers with 10 gas',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should handle 7 transfers with 10 gas',
          location: null,
          status: 'passed',
          title: 'should handle 7 transfers with 10 gas',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should not handle 8 transfers with 10 gas',
          location: null,
          status: 'passed',
          title: 'should not handle 8 transfers with 10 gas',
        },
        {
          ancestorTitles: ['execute', 'concierge', 'transfer'],
          failureMessages: [],
          fullName: 'execute concierge transfer should not handle 9 transfers with 10 gas',
          location: null,
          status: 'passed',
          title: 'should not handle 9 transfers with 10 gas',
        },
        {
          ancestorTitles: ['execute', 'switcheo', 'withdraw'],
          failureMessages: [],
          fullName: 'execute switcheo withdraw should allow NEP5 Concierge withdrawals',
          location: null,
          status: 'passed',
          title: 'should allow NEP5 Concierge withdrawals',
        },
        {
          ancestorTitles: ['execute', 'switcheo', 'withdraw'],
          failureMessages: [],
          fullName: 'execute switcheo withdraw should allow NEP5 Switcheo withdrawals',
          location: null,
          status: 'passed',
          title: 'should allow NEP5 Switcheo withdrawals',
        },
        {
          ancestorTitles: ['execute', 'switcheo', 'withdraw'],
          failureMessages: [],
          fullName: 'execute switcheo withdraw should allow withdrawing filled orders',
          location: null,
          status: 'passed',
          title: 'should allow withdrawing filled orders',
        },
      ],
      endTime: 1533162519574,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-node-vm/src/__tests__/execute.test.ts',
      startTime: 1533162514123,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler call no arguments',
          location: null,
          status: 'passed',
          title: 'call no arguments',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler call with arguments',
          location: null,
          status: 'passed',
          title: 'call with arguments',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler call that throws',
          location: null,
          status: 'passed',
          title: 'call that throws',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler property call',
          location: null,
          status: 'passed',
          title: 'property call',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler method call',
          location: null,
          status: 'passed',
          title: 'method call',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler super constructor call',
          location: null,
          status: 'passed',
          title: 'super constructor call',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler super method call',
          location: null,
          status: 'passed',
          title: 'super method call',
        },
        {
          ancestorTitles: ['CallExpressionCompiler'],
          failureMessages: [],
          fullName: 'CallExpressionCompiler method call',
          location: null,
          status: 'passed',
          title: 'method call',
        },
      ],
      endTime: 1533162520255,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/CallExpressionCompiler.test.ts',
      startTime: 1533162499254,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['RedToken'],
          failureMessages: [],
          fullName: 'RedToken properties + issue + balanceOf + totalSupply + transfer',
          location: null,
          status: 'passed',
          title: 'properties + issue + balanceOf + totalSupply + transfer',
        },
      ],
      endTime: 1533162520287,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-lib/src/__tests__/RedToken.test.ts',
      startTime: 1533162457240,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.GetTrigger',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.GetTrigger',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.CheckWitness',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.CheckWitness',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.CheckWitness',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.CheckWitness',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Notify',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Notify',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Log',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Log',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.GetTime',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.GetTime',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Serialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Serialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Deserialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Deserialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Runtime.Deserialize',
          location: null,
          status: 'passed',
          title: 'Neo.Runtime.Deserialize',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetHeight',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetHeight',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetHeader',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetHeader',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetBlock',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetBlock',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetTransaction',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetTransaction',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetTransactionHeight',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetTransactionHeight',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetAccount',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetAccount',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetValidators',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetValidators',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetAsset',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetAsset',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetContract',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetContract',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Blockchain.GetContract',
          location: null,
          status: 'passed',
          title: 'Neo.Blockchain.GetContract',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetHash',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetVersion',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetVersion',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetPrevHash',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetPrevHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetIndex',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetIndex',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetMerkleRoot',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetMerkleRoot',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetTimestamp',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetTimestamp',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetConsensusData',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetConsensusData',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Header.GetNextConsensus',
          location: null,
          status: 'passed',
          title: 'Neo.Header.GetNextConsensus',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Block.GetTransactionCount',
          location: null,
          status: 'passed',
          title: 'Neo.Block.GetTransactionCount',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Block.GetTransactions',
          location: null,
          status: 'passed',
          title: 'Neo.Block.GetTransactions',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Block.GetTransaction',
          location: null,
          status: 'passed',
          title: 'Neo.Block.GetTransaction',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetHash',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetType',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetType',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetAttributes',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetAttributes',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetInputs',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetInputs',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetOutputs',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetOutputs',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetReferences',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetReferences',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetUnspentCoins',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetUnspentCoins',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Transaction.GetUnspentCoins',
          location: null,
          status: 'passed',
          title: 'Neo.Transaction.GetUnspentCoins',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.InvocationTransaction.GetScript',
          location: null,
          status: 'passed',
          title: 'Neo.InvocationTransaction.GetScript',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Attribute.GetUsage',
          location: null,
          status: 'passed',
          title: 'Neo.Attribute.GetUsage',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Attribute.GetData',
          location: null,
          status: 'passed',
          title: 'Neo.Attribute.GetData',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Input.GetHash',
          location: null,
          status: 'passed',
          title: 'Neo.Input.GetHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Input.GetIndex',
          location: null,
          status: 'passed',
          title: 'Neo.Input.GetIndex',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Output.GetAssetId',
          location: null,
          status: 'passed',
          title: 'Neo.Output.GetAssetId',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Output.GetValue',
          location: null,
          status: 'passed',
          title: 'Neo.Output.GetValue',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Output.GetScriptHash',
          location: null,
          status: 'passed',
          title: 'Neo.Output.GetScriptHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Account.GetScriptHash',
          location: null,
          status: 'passed',
          title: 'Neo.Account.GetScriptHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Account.GetVotes',
          location: null,
          status: 'passed',
          title: 'Neo.Account.GetVotes',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Account.GetBalance',
          location: null,
          status: 'passed',
          title: 'Neo.Account.GetBalance',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Account.GetBalance',
          location: null,
          status: 'passed',
          title: 'Neo.Account.GetBalance',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetAssetId',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetAssetId',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetAssetType',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetAssetType',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetAmount',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetAmount',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetAvailable',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetAvailable',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetPrecision',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetPrecision',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetOwner',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetOwner',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetAdmin',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetAdmin',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.GetIssuer',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.GetIssuer',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Contract.GetScript',
          location: null,
          status: 'passed',
          title: 'Neo.Contract.GetScript',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Contract.IsPayable',
          location: null,
          status: 'passed',
          title: 'Neo.Contract.IsPayable',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.GetContext',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.GetContext',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.GetReadOnlyContext',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.GetReadOnlyContext',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Get',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Get',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Find',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Find',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.StorageContext.AsReadOnly',
          location: null,
          status: 'passed',
          title: 'Neo.StorageContext.AsReadOnly',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Next',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Next',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Next',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Next',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Next',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Next',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Value',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Value',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Next',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Next',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Value',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Value',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Next',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Next',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Next',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Next',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Iterator.Key',
          location: null,
          status: 'passed',
          title: 'Neo.Iterator.Key',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Value',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Value',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Value',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Value',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Enumerator.Value',
          location: null,
          status: 'passed',
          title: 'Neo.Enumerator.Value',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Account.SetVotes',
          location: null,
          status: 'passed',
          title: 'Neo.Account.SetVotes',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Validator.Register',
          location: null,
          status: 'passed',
          title: 'Neo.Validator.Register',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.Create',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.Create',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Asset.Renew',
          location: null,
          status: 'passed',
          title: 'Neo.Asset.Renew',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Contract.Create',
          location: null,
          status: 'passed',
          title: 'Neo.Contract.Create',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Contract.Migrate',
          location: null,
          status: 'passed',
          title: 'Neo.Contract.Migrate',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Contract.GetStorageContext',
          location: null,
          status: 'passed',
          title: 'Neo.Contract.GetStorageContext',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Contract.Destroy',
          location: null,
          status: 'passed',
          title: 'Neo.Contract.Destroy',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Put',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Put',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Put',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Put',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Put',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Put',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Put',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Put',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Put',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Put',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls Neo.Storage.Delete',
          location: null,
          status: 'passed',
          title: 'Neo.Storage.Delete',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls System.ExecutionEngine.GetScriptContainer',
          location: null,
          status: 'passed',
          title: 'System.ExecutionEngine.GetScriptContainer',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls System.ExecutionEngine.GetExecutingScriptHash',
          location: null,
          status: 'passed',
          title: 'System.ExecutionEngine.GetExecutingScriptHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls System.ExecutionEngine.GetCallingScriptHash',
          location: null,
          status: 'passed',
          title: 'System.ExecutionEngine.GetCallingScriptHash',
        },
        {
          ancestorTitles: ['syscalls'],
          failureMessages: [],
          fullName: 'syscalls System.ExecutionEngine.GetEntryScriptHash',
          location: null,
          status: 'passed',
          title: 'System.ExecutionEngine.GetEntryScriptHash',
        },
      ],
      endTime: 1533162521380,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-node-vm/src/__tests__/syscalls.test.ts',
      startTime: 1533162520261,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler simple arrow function',
          location: null,
          status: 'passed',
          title: 'simple arrow function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler simple argument arrow function',
          location: null,
          status: 'passed',
          title: 'simple argument arrow function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler simple return arrow function',
          location: null,
          status: 'passed',
          title: 'simple return arrow function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler simple argument return arrow function',
          location: null,
          status: 'passed',
          title: 'simple argument return arrow function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler capture const arrow function',
          location: null,
          status: 'passed',
          title: 'capture const arrow function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler capture const arrow expression function',
          location: null,
          status: 'passed',
          title: 'capture const arrow expression function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler capture let arrow function',
          location: null,
          status: 'passed',
          title: 'capture let arrow function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler capture let arrow expression function',
          location: null,
          status: 'passed',
          title: 'capture let arrow expression function',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler arrow creating arrow',
          location: null,
          status: 'passed',
          title: 'arrow creating arrow',
        },
        {
          ancestorTitles: ['ArrowFunctionCompiler'],
          failureMessages: [],
          fullName: 'ArrowFunctionCompiler arrow creating capturing arrow',
          location: null,
          status: 'passed',
          title: 'arrow creating capturing arrow',
        },
      ],
      endTime: 1533162528874,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/ArrowFunctionCompiler.test.ts',
      startTime: 1533162505570,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ArrayLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ArrayLiteralExpressionCompiler [1, foo(), y]',
          location: null,
          status: 'passed',
          title: '[1, foo(), y]',
        },
        {
          ancestorTitles: ['ArrayLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ArrayLiteralExpressionCompiler [1, 2, 3].map((x) => x + 1)',
          location: null,
          status: 'passed',
          title: '[1, 2, 3].map((x) => x + 1)',
        },
        {
          ancestorTitles: ['ArrayLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ArrayLiteralExpressionCompiler [1, 2, 3, 4].filter((x) => x % 2 === 0)',
          location: null,
          status: 'passed',
          title: '[1, 2, 3, 4].filter((x) => x % 2 === 0)',
        },
        {
          ancestorTitles: ['ArrayLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ArrayLiteralExpressionCompiler [1, 2, 3, 4].reduce((x, y) => x + y, 10)',
          location: null,
          status: 'passed',
          title: '[1, 2, 3, 4].reduce((x, y) => x + y, 10)',
        },
      ],
      endTime: 1533162530129,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/ArrayLiteralExpressionCompiler.test.ts',
      startTime: 1533162516279,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['AddMapObjectHelper'],
          failureMessages: [],
          fullName: 'AddMapObjectHelper set + get',
          location: null,
          status: 'passed',
          title: 'set + get',
        },
        {
          ancestorTitles: ['AddMapObjectHelper'],
          failureMessages: [],
          fullName: 'AddMapObjectHelper delete',
          location: null,
          status: 'passed',
          title: 'delete',
        },
        {
          ancestorTitles: ['AddMapObjectHelper'],
          failureMessages: [],
          fullName: 'AddMapObjectHelper set + delete + get',
          location: null,
          status: 'passed',
          title: 'set + delete + get',
        },
        {
          ancestorTitles: ['AddMapObjectHelper'],
          failureMessages: [],
          fullName: 'AddMapObjectHelper set + clear + delete + get',
          location: null,
          status: 'passed',
          title: 'set + clear + delete + get',
        },
      ],
      endTime: 1533162530449,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/helper/global/AddMapObjectHelper.test.ts',
      startTime: 1533162516958,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider getCurrentAccount',
          location: null,
          status: 'passed',
          title: 'getCurrentAccount',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider getAccounts',
          location: null,
          status: 'passed',
          title: 'getAccounts',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider getNetworks',
          location: null,
          status: 'passed',
          title: 'getNetworks',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider selectAccount',
          location: null,
          status: 'passed',
          title: 'selectAccount',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider deleteAccount',
          location: null,
          status: 'passed',
          title: 'deleteAccount',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider updateAccountName',
          location: null,
          status: 'passed',
          title: 'updateAccountName',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider read',
          location: null,
          status: 'passed',
          title: 'read',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transfer throws error on empty transfers',
          location: null,
          status: 'passed',
          title: 'transfer throws error on empty transfers',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transfer throws error on missing account',
          location: null,
          status: 'passed',
          title: 'transfer throws error on missing account',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transfer throws insufficient funds error',
          location: null,
          status: 'passed',
          title: 'transfer throws insufficient funds error',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transfer 0',
          location: null,
          status: 'passed',
          title: 'transfer 0',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transfer without network fee',
          location: null,
          status: 'passed',
          title: 'transfer without network fee',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transfer',
          location: null,
          status: 'passed',
          title: 'transfer',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider claim throws NothingToClaim error',
          location: null,
          status: 'passed',
          title: 'claim throws NothingToClaim error',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider claim without networkFee',
          location: null,
          status: 'passed',
          title: 'claim without networkFee',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider claim',
          location: null,
          status: 'passed',
          title: 'claim',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider error thrown on 2 script attributes when neither match script hash',
          location: null,
          status: 'passed',
          title: 'error thrown on 2 script attributes when neither match script hash',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider error thrown with 2 script attributes and no transaction scripts',
          location: null,
          status: 'passed',
          title: 'error thrown with 2 script attributes and no transaction scripts',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider error thrown with 1 script attributes and no transaction scripts',
          location: null,
          status: 'passed',
          title: 'error thrown with 1 script attributes and no transaction scripts',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider error thrown with 3+ script attributes',
          location: null,
          status: 'passed',
          title: 'error thrown with 3+ script attributes',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName:
            'LocalUserAccountProvider error thrown with with 0 script attributes, but nonzero transaction scripts',
          location: null,
          status: 'passed',
          title: 'error thrown with with 0 script attributes, but nonzero transaction scripts',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider publish throws error on invoke fault',
          location: null,
          status: 'passed',
          title: 'publish throws error on invoke fault',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider publish throws error when no contracts are created',
          location: null,
          status: 'passed',
          title: 'publish throws error when no contracts are created',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider publish - result fault',
          location: null,
          status: 'passed',
          title: 'publish - result fault',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider publish - result success',
          location: null,
          status: 'passed',
          title: 'publish - result success',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider registerAsset throws error on missing asset',
          location: null,
          status: 'passed',
          title: 'registerAsset throws error on missing asset',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider registerAsset with no options',
          location: null,
          status: 'passed',
          title: 'registerAsset with no options',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider registerAsset - result fault',
          location: null,
          status: 'passed',
          title: 'registerAsset - result fault',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider registerAsset - result success',
          location: null,
          status: 'passed',
          title: 'registerAsset - result success',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider issue throws error on no inputs',
          location: null,
          status: 'passed',
          title: 'issue throws error on no inputs',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider issue',
          location: null,
          status: 'passed',
          title: 'issue',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider invoke with no options',
          location: null,
          status: 'passed',
          title: 'invoke with no options',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider invoke',
          location: null,
          status: 'passed',
          title: 'invoke',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider call with no options',
          location: null,
          status: 'passed',
          title: 'call with no options',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider call',
          location: null,
          status: 'passed',
          title: 'call',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider multi-input-fix networkFee-throws',
          location: null,
          status: 'passed',
          title: 'multi-input-fix networkFee-throws',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider multi-input-fix updates-on-new-block',
          location: null,
          status: 'passed',
          title: 'multi-input-fix updates-on-new-block',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transaction consolidates',
          location: null,
          status: 'passed',
          title: 'transaction consolidates',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider claim consolidates',
          location: null,
          status: 'passed',
          title: 'claim consolidates',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider blank transaction consolidates',
          location: null,
          status: 'passed',
          title: 'blank transaction consolidates',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider consolidate prioritizes any asset with a return output',
          location: null,
          status: 'passed',
          title: 'consolidate prioritizes any asset with a return output',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider consolidation prioritizes NEO/GAS for new outputs',
          location: null,
          status: 'passed',
          title: 'consolidation prioritizes NEO/GAS for new outputs',
        },
        {
          ancestorTitles: ['LocalUserAccountProvider'],
          failureMessages: [],
          fullName: 'LocalUserAccountProvider transaction consolidates GAS when network fee present',
          location: null,
          status: 'passed',
          title: 'transaction consolidates GAS when network fee present',
        },
      ],
      endTime: 1533162530638,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/LocalUserAccountProvider.test.ts',
      startTime: 1533162530146,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider setRPCURL',
          location: null,
          status: 'passed',
          title: 'setRPCURL',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getUnclaimed',
          location: null,
          status: 'passed',
          title: 'getUnclaimed',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getUnspentOutputs',
          location: null,
          status: 'passed',
          title: 'getUnspentOutputs',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with MinerTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with MinerTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with ClaimTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with ClaimTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with ContractTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with ContractTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with EnrollmentTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with EnrollmentTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with IssueTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with IssueTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with PublishTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with PublishTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with RegisterTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with RegisterTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with RegisterTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with RegisterTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with StateTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with StateTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider', '_ConvertTransactionBase types'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _ConvertTransactionBase types relayTransaction with InvocationTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction with InvocationTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getTransactionReceipt',
          location: null,
          status: 'passed',
          title: 'getTransactionReceipt',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getInvocationData',
          location: null,
          status: 'passed',
          title: 'getInvocationData',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider testInvoke',
          location: null,
          status: 'passed',
          title: 'testInvoke',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getAccount',
          location: null,
          status: 'passed',
          title: 'getAccount',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getAsset with multiple languages',
          location: null,
          status: 'passed',
          title: 'getAsset with multiple languages',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getAsset with multiple languages - no english name',
          location: null,
          status: 'passed',
          title: 'getAsset with multiple languages - no english name',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getBlock',
          location: null,
          status: 'passed',
          title: 'getBlock',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getBestBlockHash',
          location: null,
          status: 'passed',
          title: 'getBestBlockHash',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getBlockCount',
          location: null,
          status: 'passed',
          title: 'getBlockCount',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getContract',
          location: null,
          status: 'passed',
          title: 'getContract',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getMemPool',
          location: null,
          status: 'passed',
          title: 'getMemPool',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getValidators',
          location: null,
          status: 'passed',
          title: 'getValidators',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getConnectedPeers',
          location: null,
          status: 'passed',
          title: 'getConnectedPeers',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getTransaction',
          location: null,
          status: 'passed',
          title: 'getTransaction',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getNetworkSettings',
          location: null,
          status: 'passed',
          title: 'getNetworkSettings',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider _convertConfirmedTransaction throws undefined data error',
          location: null,
          status: 'passed',
          title: '_convertConfirmedTransaction throws undefined data error',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName:
            'NEOONEDataProvider _convertConfirmedTransaction with InvocationTransaction throws undefined data error',
          location: null,
          status: 'passed',
          title: '_convertConfirmedTransaction with InvocationTransaction throws undefined data error',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider getStorage',
          location: null,
          status: 'passed',
          title: 'getStorage',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider iterStorage',
          location: null,
          status: 'passed',
          title: 'iterStorage',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider iterBlocks - undefined iterBlocksFetchTimeoutMS',
          location: null,
          status: 'passed',
          title: 'iterBlocks - undefined iterBlocksFetchTimeoutMS',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider iterBlocks',
          location: null,
          status: 'passed',
          title: 'iterBlocks',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider iterActions',
          location: null,
          status: 'passed',
          title: 'iterActions',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider iterActions undefined filter',
          location: null,
          status: 'passed',
          title: 'iterActions undefined filter',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider call',
          location: null,
          status: 'passed',
          title: 'call',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider runConsensusNow',
          location: null,
          status: 'passed',
          title: 'runConsensusNow',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider updateSettings',
          location: null,
          status: 'passed',
          title: 'updateSettings',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider fastForwardOffset',
          location: null,
          status: 'passed',
          title: 'fastForwardOffset',
        },
        {
          ancestorTitles: ['NEOONEDataProvider'],
          failureMessages: [],
          fullName: 'NEOONEDataProvider fastForwardToTime',
          location: null,
          status: 'passed',
          title: 'fastForwardToTime',
        },
      ],
      endTime: 1533162530942,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/provider/neoone/NEOONEDataProvider.test.ts',
      startTime: 1533162530646,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore wallets get without sync',
          location: null,
          status: 'passed',
          title: 'wallets get without sync',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore wallets get with sync',
          location: null,
          status: 'passed',
          title: 'wallets get with sync',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore wallets get - same network',
          location: null,
          status: 'passed',
          title: 'wallets get - same network',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore getCurrentAccount',
          location: null,
          status: 'passed',
          title: 'getCurrentAccount',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore getAccounts',
          location: null,
          status: 'passed',
          title: 'getAccounts',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore currentAccount',
          location: null,
          status: 'passed',
          title: 'currentAccount',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore sign',
          location: null,
          status: 'passed',
          title: 'sign',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore sign locked account',
          location: null,
          status: 'passed',
          title: 'sign locked account',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore addAccount throws error on missing private key & password+nep2',
          location: null,
          status: 'passed',
          title: 'addAccount throws error on missing private key & password+nep2',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore addAccount sets privateKey when given nep2+password',
          location: null,
          status: 'passed',
          title: 'addAccount sets privateKey when given nep2+password',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore addAccount sets nep2 when given privateKey+password and is set to current account',
          location: null,
          status: 'passed',
          title: 'addAccount sets nep2 when given privateKey+password and is set to current account',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore construct with undefined network',
          location: null,
          status: 'passed',
          title: 'construct with undefined network',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore addAccount',
          location: null,
          status: 'passed',
          title: 'addAccount',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore selectAccount',
          location: null,
          status: 'passed',
          title: 'selectAccount',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore selectAccount with undefined id',
          location: null,
          status: 'passed',
          title: 'selectAccount with undefined id',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore updateAccountName - unlocked wallet',
          location: null,
          status: 'passed',
          title: 'updateAccountName - unlocked wallet',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore updateAccountName - locked wallet',
          location: null,
          status: 'passed',
          title: 'updateAccountName - locked wallet',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore getWallet throws error on unknown network',
          location: null,
          status: 'passed',
          title: 'getWallet throws error on unknown network',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore getWallet throws error on unknown address',
          location: null,
          status: 'passed',
          title: 'getWallet throws error on unknown address',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore getWallet',
          location: null,
          status: 'passed',
          title: 'getWallet',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore deleteAccount - current account',
          location: null,
          status: 'passed',
          title: 'deleteAccount - current account',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore deleteAccount - non current account',
          location: null,
          status: 'passed',
          title: 'deleteAccount - non current account',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore addAccount - no current account',
          location: null,
          status: 'passed',
          title: 'addAccount - no current account',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore deleteAccount - network not found',
          location: null,
          status: 'passed',
          title: 'deleteAccount - network not found',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore deleteAccount - address not found',
          location: null,
          status: 'passed',
          title: 'deleteAccount - address not found',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore unlockWallet with private key',
          location: null,
          status: 'passed',
          title: 'unlockWallet with private key',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore unlockWallet with nep2',
          location: null,
          status: 'passed',
          title: 'unlockWallet with nep2',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore unlockWallet throws error on undefined nep2 & private key',
          location: null,
          status: 'passed',
          title: 'unlockWallet throws error on undefined nep2 & private key',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore lockWallet',
          location: null,
          status: 'passed',
          title: 'lockWallet',
        },
        {
          ancestorTitles: ['LocalKeyStore'],
          failureMessages: [],
          fullName: 'LocalKeyStore lockWallet - undefined nep2 or privateKey - already locked',
          location: null,
          status: 'passed',
          title: 'lockWallet - undefined nep2 or privateKey - already locked',
        },
      ],
      endTime: 1533162531197,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/keystore/LocalKeyStore.test.ts',
      startTime: 1533162530962,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertString',
          location: null,
          status: 'passed',
          title: 'assertString',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAddress',
          location: null,
          status: 'passed',
          title: 'assertAddress',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableString',
          location: null,
          status: 'passed',
          title: 'assertNullableString',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableString',
          location: null,
          status: 'passed',
          title: 'assertNullableString',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash160',
          location: null,
          status: 'passed',
          title: 'assertHash160',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash256',
          location: null,
          status: 'passed',
          title: 'assertHash256',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBuffer',
          location: null,
          status: 'passed',
          title: 'assertBuffer',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertPublicKey',
          location: null,
          status: 'passed',
          title: 'assertPublicKey',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBigNumber',
          location: null,
          status: 'passed',
          title: 'assertBigNumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableBigNumber',
          location: null,
          status: 'passed',
          title: 'assertNullableBigNumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableBigNumber',
          location: null,
          status: 'passed',
          title: 'assertNullableBigNumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBoolean',
          location: null,
          status: 'passed',
          title: 'assertBoolean',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNumber',
          location: null,
          status: 'passed',
          title: 'assertNumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableNumber',
          location: null,
          status: 'passed',
          title: 'assertNullableNumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableNumber',
          location: null,
          status: 'passed',
          title: 'assertNullableNumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertArray',
          location: null,
          status: 'passed',
          title: 'assertArray',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertGetOptions',
          location: null,
          status: 'passed',
          title: 'assertGetOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertGetOptions',
          location: null,
          status: 'passed',
          title: 'assertGetOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertGetOptions',
          location: null,
          status: 'passed',
          title: 'assertGetOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIReturn',
          location: null,
          status: 'passed',
          title: 'assertABIReturn',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIParameter',
          location: null,
          status: 'passed',
          title: 'assertABIParameter',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction',
          location: null,
          status: 'passed',
          title: 'assertABIFunction',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction',
          location: null,
          status: 'passed',
          title: 'assertABIFunction',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIEvent',
          location: null,
          status: 'passed',
          title: 'assertABIEvent',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI',
          location: null,
          status: 'passed',
          title: 'assertABI',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI',
          location: null,
          status: 'passed',
          title: 'assertABI',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionOptions',
          location: null,
          status: 'passed',
          title: 'assertTransactionOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionOptions',
          location: null,
          status: 'passed',
          title: 'assertTransactionOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertContractRegister',
          location: null,
          status: 'passed',
          title: 'assertContractRegister',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionReceipt',
          location: null,
          status: 'passed',
          title: 'assertTransactionReceipt',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfer',
          location: null,
          status: 'passed',
          title: 'assertTransfer',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers',
          location: null,
          status: 'passed',
          title: 'assertTransfers',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers',
          location: null,
          status: 'passed',
          title: 'assertTransfers',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUpdateAccountNameOptions',
          location: null,
          status: 'passed',
          title: 'assertUpdateAccountNameOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount',
          location: null,
          status: 'passed',
          title: 'assertUserAccount',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccountID',
          location: null,
          status: 'passed',
          title: 'assertUserAccountID',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNetworkType',
          location: null,
          status: 'passed',
          title: 'assertNetworkType',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAttributeArg',
          location: null,
          status: 'passed',
          title: 'assertAttributeArg',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertString throws error on non-string',
          location: null,
          status: 'passed',
          title: 'assertString throws error on non-string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertString throws error on missing param',
          location: null,
          status: 'passed',
          title: 'assertString throws error on missing param',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAddress throws error on non-string',
          location: null,
          status: 'passed',
          title: 'assertAddress throws error on non-string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAddress throws error on missing/undefined param',
          location: null,
          status: 'passed',
          title: 'assertAddress throws error on missing/undefined param',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAddress throws error on malformed address',
          location: null,
          status: 'passed',
          title: 'assertAddress throws error on malformed address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash160 throws error on non string',
          location: null,
          status: 'passed',
          title: 'assertHash160 throws error on non string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash160 throws error on missing 0x prefix',
          location: null,
          status: 'passed',
          title: 'assertHash160 throws error on missing 0x prefix',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash160 throws error on malformed hash160',
          location: null,
          status: 'passed',
          title: 'assertHash160 throws error on malformed hash160',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash256 throws error on non string',
          location: null,
          status: 'passed',
          title: 'assertHash256 throws error on non string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash256 throws error on missing 0x prefix',
          location: null,
          status: 'passed',
          title: 'assertHash256 throws error on missing 0x prefix',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertHash256 throws error on malformed hash256',
          location: null,
          status: 'passed',
          title: 'assertHash256 throws error on malformed hash256',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBuffer throws error on non hex string',
          location: null,
          status: 'passed',
          title: 'assertBuffer throws error on non hex string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBuffer throws error on non string',
          location: null,
          status: 'passed',
          title: 'assertBuffer throws error on non string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertPublicKey throws error on unbufferable param',
          location: null,
          status: 'passed',
          title: 'assertPublicKey throws error on unbufferable param',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertPublicKey throws error on malformed key',
          location: null,
          status: 'passed',
          title: 'assertPublicKey throws error on malformed key',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBigNumber throws error on non bignumber',
          location: null,
          status: 'passed',
          title: 'assertBigNumber throws error on non bignumber',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBigNumber throws error on non bignumber string',
          location: null,
          status: 'passed',
          title: 'assertBigNumber throws error on non bignumber string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBoolean throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertBoolean throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBoolean throws error on non bool',
          location: null,
          status: 'passed',
          title: 'assertBoolean throws error on non bool',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNumber throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertNumber throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNumber throws error on non number',
          location: null,
          status: 'passed',
          title: 'assertNumber throws error on non number',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNullableNumber throws error on non undefined or number',
          location: null,
          status: 'passed',
          title: 'assertNullableNumber throws error on non undefined or number',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertArray throws error on non array',
          location: null,
          status: 'passed',
          title: 'assertArray throws error on non array',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter throws error on indexStart non number',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter throws error on indexStart non number',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter throws error on indexStop non number',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter throws error on indexStop non number',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertBlockFilter throws error on indexStop<=indexStart',
          location: null,
          status: 'passed',
          title: 'assertBlockFilter throws error on indexStop<=indexStart',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertGetOptions throws error on invalid timeout field',
          location: null,
          status: 'passed',
          title: 'assertGetOptions throws error on invalid timeout field',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertGetOptions throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertGetOptions throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIReturn throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertABIReturn throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIReturn throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertABIReturn throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIReturn throws error on non number type for Integer',
          location: null,
          status: 'passed',
          title: 'assertABIReturn throws error on non number type for Integer',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIReturn throws error on invalid ABI type',
          location: null,
          status: 'passed',
          title: 'assertABIReturn throws error on invalid ABI type',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIParameter throws error on non string name',
          location: null,
          status: 'passed',
          title: 'assertABIParameter throws error on non string name',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIParameter throws error on non ABIReturn',
          location: null,
          status: 'passed',
          title: 'assertABIParameter throws error on non ABIReturn',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIParameter throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertABIParameter throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIParameter throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertABIParameter throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on non string name',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on non string name',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on non bool constant',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on non bool constant',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on non ABIParameter parameters',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on non ABIParameter parameters',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on non Array parameters',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on non Array parameters',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIFunction throws error on invalid returnType',
          location: null,
          status: 'passed',
          title: 'assertABIFunction throws error on invalid returnType',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIEvent throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertABIEvent throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIEvent throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertABIEvent throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIEvent throws error on non string name',
          location: null,
          status: 'passed',
          title: 'assertABIEvent throws error on non string name',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIEvent throws error on non array parameters',
          location: null,
          status: 'passed',
          title: 'assertABIEvent throws error on non array parameters',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABIEvent throws error on non ABIParameter parameters',
          location: null,
          status: 'passed',
          title: 'assertABIEvent throws error on non ABIParameter parameters',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI throws error on undefined',
          location: null,
          status: 'passed',
          title: 'assertABI throws error on undefined',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertABI throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI throws non array functions',
          location: null,
          status: 'passed',
          title: 'assertABI throws non array functions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI throws non ABIFunction functions',
          location: null,
          status: 'passed',
          title: 'assertABI throws non ABIFunction functions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI throws non non array events',
          location: null,
          status: 'passed',
          title: 'assertABI throws non non array events',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertABI throws non non ABI Event events',
          location: null,
          status: 'passed',
          title: 'assertABI throws non non ABI Event events',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionOptions throws error on non object',
          location: null,
          status: 'passed',
          title: 'assertTransactionOptions throws error on non object',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionOptions throws error on non attribute array',
          location: null,
          status: 'passed',
          title: 'assertTransactionOptions throws error on non attribute array',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionOptions throws error on non BigNumber networkFee',
          location: null,
          status: 'passed',
          title: 'assertTransactionOptions throws error on non BigNumber networkFee',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid assetType',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid assetType',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid name',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid name',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid amount',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid amount',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid precision',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid precision',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid Public Key',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid Public Key',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid admin Address',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid admin Address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAssetRegister throws error on invalid issuer Address',
          location: null,
          status: 'passed',
          title: 'assertAssetRegister throws error on invalid issuer Address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertContractRegister throws error on invalid Buffer',
          location: null,
          status: 'passed',
          title: 'assertContractRegister throws error on invalid Buffer',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertContractRegister throws error on invalid Parameter type',
          location: null,
          status: 'passed',
          title: 'assertContractRegister throws error on invalid Parameter type',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertContractRegister throws error on invalid Parameter type',
          location: null,
          status: 'passed',
          title: 'assertContractRegister throws error on invalid Parameter type',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertContractRegister throws error on invalid String type',
          location: null,
          status: 'passed',
          title: 'assertContractRegister throws error on invalid String type',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertContractRegister throws error on invalid Parameter type',
          location: null,
          status: 'passed',
          title: 'assertContractRegister throws error on invalid Parameter type',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionReceipt throws error on invalid blockIndex',
          location: null,
          status: 'passed',
          title: 'assertTransactionReceipt throws error on invalid blockIndex',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionReceipt throws error on invalid blockHash',
          location: null,
          status: 'passed',
          title: 'assertTransactionReceipt throws error on invalid blockHash',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransactionReceipt throws error on invalid transactionIndex',
          location: null,
          status: 'passed',
          title: 'assertTransactionReceipt throws error on invalid transactionIndex',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfer throws error on invalid amount',
          location: null,
          status: 'passed',
          title: 'assertTransfer throws error on invalid amount',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfer throws error on invalid asset',
          location: null,
          status: 'passed',
          title: 'assertTransfer throws error on invalid asset',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfer throws error on invalid to address',
          location: null,
          status: 'passed',
          title: 'assertTransfer throws error on invalid to address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers (type 1) throws error on invalid amount',
          location: null,
          status: 'passed',
          title: 'assertTransfers (type 1) throws error on invalid amount',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers (type 1) throws error on invalid asset',
          location: null,
          status: 'passed',
          title: 'assertTransfers (type 1) throws error on invalid asset',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers (type 1) throws error on invalid address',
          location: null,
          status: 'passed',
          title: 'assertTransfers (type 1) throws error on invalid address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers (type 1) throws error on invalid transaction options',
          location: null,
          status: 'passed',
          title: 'assertTransfers (type 1) throws error on invalid transaction options',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers (type 2) throws error on invalid transfer',
          location: null,
          status: 'passed',
          title: 'assertTransfers (type 2) throws error on invalid transfer',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertTransfers (type 2) throws error on invalid transactionOptions',
          location: null,
          status: 'passed',
          title: 'assertTransfers (type 2) throws error on invalid transactionOptions',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUpdatedAccountNameOptions throws error on invalid id network',
          location: null,
          status: 'passed',
          title: 'assertUpdatedAccountNameOptions throws error on invalid id network',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUpdatedAccountNameOptions throws error on invalid id address',
          location: null,
          status: 'passed',
          title: 'assertUpdatedAccountNameOptions throws error on invalid id address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUpdatedAccountNameOptions throws error on invalid name',
          location: null,
          status: 'passed',
          title: 'assertUpdatedAccountNameOptions throws error on invalid name',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid type',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid type',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid id network',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid id network',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid id address',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid id address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid name',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid name',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid scriptHash',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid scriptHash',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid publicKey',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid publicKey',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid configurableName value',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid configurableName value',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccount throws error on invalid deletable value',
          location: null,
          status: 'passed',
          title: 'assertUserAccount throws error on invalid deletable value',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccountID throws error on invalid network string',
          location: null,
          status: 'passed',
          title: 'assertUserAccountID throws error on invalid network string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertUserAccountID throws error on invalid address',
          location: null,
          status: 'passed',
          title: 'assertUserAccountID throws error on invalid address',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertNetworkType throws error on invalid network string',
          location: null,
          status: 'passed',
          title: 'assertNetworkType throws error on invalid network string',
        },
        {
          ancestorTitles: ['arg assertions'],
          failureMessages: [],
          fullName: 'arg assertions assertAttributeArg throws error through assertTransactionOptions',
          location: null,
          status: 'passed',
          title: 'assertAttributeArg throws error through assertTransactionOptions',
        },
      ],
      endTime: 1533162531497,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/args.test.ts',
      startTime: 1533162531207,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ObjectLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ObjectLiteralExpressionCompiler empty object',
          location: null,
          status: 'passed',
          title: 'empty object',
        },
        {
          ancestorTitles: ['ObjectLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ObjectLiteralExpressionCompiler object with property',
          location: null,
          status: 'passed',
          title: 'object with property',
        },
        {
          ancestorTitles: ['ObjectLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ObjectLiteralExpressionCompiler object with short-hand property',
          location: null,
          status: 'passed',
          title: 'object with short-hand property',
        },
        {
          ancestorTitles: ['ObjectLiteralExpressionCompiler'],
          failureMessages: [],
          fullName: 'ObjectLiteralExpressionCompiler object with method',
          location: null,
          status: 'passed',
          title: 'object with method',
        },
      ],
      endTime: 1533162534213,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/ObjectLiteralExpressionCompiler.test.ts',
      startTime: 1533162519586,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ForStatementCompiler'],
          failureMessages: [],
          fullName: 'ForStatementCompiler simple',
          location: null,
          status: 'passed',
          title: 'simple',
        },
        {
          ancestorTitles: ['ForStatementCompiler'],
          failureMessages: [],
          fullName: 'ForStatementCompiler continue',
          location: null,
          status: 'passed',
          title: 'continue',
        },
      ],
      endTime: 1533162535105,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/statement/ForStatementCompiler.test.ts',
      startTime: 1533162521390,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['FunctionDeclarationCompiler'],
          failureMessages: [],
          fullName: 'FunctionDeclarationCompiler basic function',
          location: null,
          status: 'passed',
          title: 'basic function',
        },
        {
          ancestorTitles: ['FunctionDeclarationCompiler'],
          failureMessages: [],
          fullName: 'FunctionDeclarationCompiler 2 functions',
          location: null,
          status: 'passed',
          title: '2 functions',
        },
        {
          ancestorTitles: ['FunctionDeclarationCompiler'],
          failureMessages: [],
          fullName: 'FunctionDeclarationCompiler recursive + outer scope bound',
          location: null,
          status: 'passed',
          title: 'recursive + outer scope bound',
        },
        {
          ancestorTitles: ['FunctionDeclarationCompiler'],
          failureMessages: [],
          fullName: 'FunctionDeclarationCompiler arguments is new scope',
          location: null,
          status: 'passed',
          title: 'arguments is new scope',
        },
      ],
      endTime: 1533162535113,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/declaration/FunctionDeclarationCompiler.test.ts',
      startTime: 1533162520298,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ConditionalExpressionCompiler'],
          failureMessages: [],
          fullName: 'ConditionalExpressionCompiler true conditional',
          location: null,
          status: 'passed',
          title: 'true conditional',
        },
        {
          ancestorTitles: ['ConditionalExpressionCompiler'],
          failureMessages: [],
          fullName: 'ConditionalExpressionCompiler false conditional',
          location: null,
          status: 'passed',
          title: 'false conditional',
        },
      ],
      endTime: 1533162539952,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/ConditionalExpressionCompiler.test.ts',
      startTime: 1533162528904,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['VariableDeclarationListCompiler'],
          failureMessages: [],
          fullName: 'VariableDeclarationListCompiler binds let variables',
          location: null,
          status: 'passed',
          title: 'binds let variables',
        },
      ],
      endTime: 1533162540414,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/declaration/VariableDeclarationListCompiler.test.ts',
      startTime: 1533162531549,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client Client constructor throws error on undefined client',
          location: null,
          status: 'passed',
          title: 'Client constructor throws error on undefined client',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client Client constructor throws error on mismatched provider type',
          location: null,
          status: 'passed',
          title: 'Client constructor throws error on mismatched provider type',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client Client constructor sets up currentAcount$ observable',
          location: null,
          status: 'passed',
          title: 'Client constructor sets up currentAcount$ observable',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client Client constructor sets up accounts$ observable',
          location: null,
          status: 'passed',
          title: 'Client constructor sets up accounts$ observable',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client Client constructor sets up networks$ observable',
          location: null,
          status: 'passed',
          title: 'Client constructor sets up networks$ observable',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client get providers',
          location: null,
          status: 'passed',
          title: 'get providers',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client selectAccount throws error on unknown account',
          location: null,
          status: 'passed',
          title: 'selectAccount throws error on unknown account',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client selectAccount',
          location: null,
          status: 'passed',
          title: 'selectAccount',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client getAccounts',
          location: null,
          status: 'passed',
          title: 'getAccounts',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client getAccount',
          location: null,
          status: 'passed',
          title: 'getAccount',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client getAccount throws error on nonexistant account',
          location: null,
          status: 'passed',
          title: 'getAccount throws error on nonexistant account',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client deleteAccount',
          location: null,
          status: 'passed',
          title: 'deleteAccount',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client updateAccountName',
          location: null,
          status: 'passed',
          title: 'updateAccountName',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client getNetworks',
          location: null,
          status: 'passed',
          title: 'getNetworks',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client read',
          location: null,
          status: 'passed',
          title: 'read',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client read throws error on invalid network',
          location: null,
          status: 'passed',
          title: 'read throws error on invalid network',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client inject',
          location: null,
          status: 'passed',
          title: 'inject',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client static inject',
          location: null,
          status: 'passed',
          title: 'static inject',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client getCurrentAccount',
          location: null,
          status: 'passed',
          title: 'getCurrentAccount',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client transfer',
          location: null,
          status: 'passed',
          title: 'transfer',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client transfer',
          location: null,
          status: 'passed',
          title: 'transfer',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client claim',
          location: null,
          status: 'passed',
          title: 'claim',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client publish',
          location: null,
          status: 'passed',
          title: 'publish',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client registerAsset',
          location: null,
          status: 'passed',
          title: 'registerAsset',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client issue',
          location: null,
          status: 'passed',
          title: 'issue',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client invoke',
          location: null,
          status: 'passed',
          title: 'invoke',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client call',
          location: null,
          status: 'passed',
          title: 'call',
        },
        {
          ancestorTitles: ['Client'],
          failureMessages: [],
          fullName: 'Client smartContract',
          location: null,
          status: 'passed',
          title: 'smartContract',
        },
      ],
      endTime: 1533162540664,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/Client.test.ts',
      startTime: 1533162540421,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['BrowserMonitor'],
          failureMessages: [],
          fullName: 'BrowserMonitor CollectingLogger',
          location: null,
          status: 'passed',
          title: 'CollectingLogger',
        },
        {
          ancestorTitles: ['BrowserMonitor'],
          failureMessages: [],
          fullName: 'BrowserMonitor BrowserMetricsFactory',
          location: null,
          status: 'passed',
          title: 'BrowserMetricsFactory',
        },
        {
          ancestorTitles: ['BrowserMonitor'],
          failureMessages: [],
          fullName: 'BrowserMonitor Reporter - POST success',
          location: null,
          status: 'passed',
          title: 'Reporter - POST success',
        },
        {
          ancestorTitles: ['BrowserMonitor'],
          failureMessages: [],
          fullName: 'BrowserMonitor Reporter - POST failure',
          location: null,
          status: 'passed',
          title: 'Reporter - POST failure',
        },
        {
          ancestorTitles: ['BrowserMonitor', 'report to Node'],
          failureMessages: [],
          fullName: 'BrowserMonitor report to Node Counter.inc called with same args',
          location: null,
          status: 'passed',
          title: 'Counter.inc called with same args',
        },
        {
          ancestorTitles: ['BrowserMonitor', 'report to Node'],
          failureMessages: [],
          fullName: 'BrowserMonitor report to Node Histogram.observe called with same args',
          location: null,
          status: 'passed',
          title: 'Histogram.observe called with same args',
        },
        {
          ancestorTitles: ['BrowserMonitor', 'report to Node'],
          failureMessages: [],
          fullName: 'BrowserMonitor report to Node logging',
          location: null,
          status: 'passed',
          title: 'logging',
        },
      ],
      endTime: 1533162540916,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-monitor/src/__tests__/BrowserMonitor.test.ts',
      startTime: 1533162540670,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['AsyncBlockIterator'],
          failureMessages: [],
          fullName: 'AsyncBlockIterator should be an AsyncIterator',
          location: null,
          status: 'passed',
          title: 'should be an AsyncIterator',
        },
        {
          ancestorTitles: ['AsyncBlockIterator'],
          failureMessages: [],
          fullName: 'AsyncBlockIterator should return blocks in order up until indexStop',
          location: null,
          status: 'passed',
          title: 'should return blocks in order up until indexStop',
        },
        {
          ancestorTitles: ['AsyncBlockIterator'],
          failureMessages: [],
          fullName: 'AsyncBlockIterator should throw an error if the client throws an error',
          location: null,
          status: 'passed',
          title: 'should throw an error if the client throws an error',
        },
        {
          ancestorTitles: ['AsyncBlockIterator'],
          failureMessages: [],
          fullName: 'AsyncBlockIterator should retry fetch on UnknownBlockError',
          location: null,
          status: 'passed',
          title: 'should retry fetch on UnknownBlockError',
        },
        {
          ancestorTitles: ['AsyncBlockIterator'],
          failureMessages: [],
          fullName: 'AsyncBlockIterator should throw on other errors',
          location: null,
          status: 'passed',
          title: 'should throw on other errors',
        },
      ],
      endTime: 1533162541063,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/AsyncBlockIterator.test.ts',
      startTime: 1533162540926,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['Blockchain', 'verifyTransaction'],
          failureMessages: [],
          fullName: 'Blockchain verifyTransaction should throw error on invalid script',
          location: null,
          status: 'passed',
          title: 'should throw error on invalid script',
        },
      ],
      endTime: 1533162541181,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-node-blockchain/src/__tests__/Blockchain.test.ts',
      startTime: 1533162535119,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider NEOONEProvider constructor with no options',
          location: null,
          status: 'passed',
          title: 'NEOONEProvider constructor with no options',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider NEOONEProvider constructor with main & test',
          location: null,
          status: 'passed',
          title: 'NEOONEProvider constructor with main & test',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider getNetworks',
          location: null,
          status: 'passed',
          title: 'getNetworks',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider addNetwork new network',
          location: null,
          status: 'passed',
          title: 'addNetwork new network',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider addNetwork existing network',
          location: null,
          status: 'passed',
          title: 'addNetwork existing network',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider read',
          location: null,
          status: 'passed',
          title: 'read',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider _getProvider throws error for unknown network',
          location: null,
          status: 'passed',
          title: '_getProvider throws error for unknown network',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider getUnclaimed',
          location: null,
          status: 'passed',
          title: 'getUnclaimed',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider getUnspentOutputs',
          location: null,
          status: 'passed',
          title: 'getUnspentOutputs',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider relayTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider getTransactionReceipt',
          location: null,
          status: 'passed',
          title: 'getTransactionReceipt',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider getInvocationData',
          location: null,
          status: 'passed',
          title: 'getInvocationData',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider testInvoke',
          location: null,
          status: 'passed',
          title: 'testInvoke',
        },
        {
          ancestorTitles: ['NEOONEProvider'],
          failureMessages: [],
          fullName: 'NEOONEProvider getNetworkSettings',
          location: null,
          status: 'passed',
          title: 'getNetworkSettings',
        },
      ],
      endTime: 1533162541271,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/provider/neoone/NEOONEProvider.test.ts',
      startTime: 1533162541068,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['handleConsensusPayload'],
          failureMessages: [],
          fullName: 'handleConsensusPayload updates the expected view on new view number',
          location: null,
          status: 'passed',
          title: 'updates the expected view on new view number',
        },
      ],
      endTime: 1533162541317,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-node-protocol/src/__tests__/consensus/handleConsensusPayload.test.ts',
      startTime: 1533162535124,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['BooleanLiteralCompiler'],
          failureMessages: [],
          fullName: 'BooleanLiteralCompiler true',
          location: null,
          status: 'passed',
          title: 'true',
        },
        {
          ancestorTitles: ['BooleanLiteralCompiler'],
          failureMessages: [],
          fullName: 'BooleanLiteralCompiler false',
          location: null,
          status: 'passed',
          title: 'false',
        },
      ],
      endTime: 1533162541382,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/BooleanLiteralCompiler.test.ts',
      startTime: 1533162530469,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['createReadSmartContract'],
          failureMessages: [],
          fullName: 'createReadSmartContract smartContract creation - createCall',
          location: null,
          status: 'passed',
          title: 'smartContract creation - createCall',
        },
        {
          ancestorTitles: ['createReadSmartContract'],
          failureMessages: [],
          fullName: 'createReadSmartContract iterActions with filter',
          location: null,
          status: 'passed',
          title: 'iterActions with filter',
        },
        {
          ancestorTitles: ['createReadSmartContract'],
          failureMessages: [],
          fullName: 'createReadSmartContract iterActions with no filter',
          location: null,
          status: 'passed',
          title: 'iterActions with no filter',
        },
        {
          ancestorTitles: ['createReadSmartContract'],
          failureMessages: [],
          fullName: 'createReadSmartContract iterEvents',
          location: null,
          status: 'passed',
          title: 'iterEvents',
        },
        {
          ancestorTitles: ['createReadSmartContract'],
          failureMessages: [],
          fullName: 'createReadSmartContract iterLogs',
          location: null,
          status: 'passed',
          title: 'iterLogs',
        },
        {
          ancestorTitles: ['createReadSmartContract'],
          failureMessages: [],
          fullName: 'createReadSmartContract iterStorage',
          location: null,
          status: 'passed',
          title: 'iterStorage',
        },
      ],
      endTime: 1533162541429,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/sc/createReadSmartContract.test.ts',
      startTime: 1533162541195,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['DeveloperClient'],
          failureMessages: [],
          fullName: 'DeveloperClient runConsensusNow',
          location: null,
          status: 'passed',
          title: 'runConsensusNow',
        },
        {
          ancestorTitles: ['DeveloperClient'],
          failureMessages: [],
          fullName: 'DeveloperClient updateSettings',
          location: null,
          status: 'passed',
          title: 'updateSettings',
        },
        {
          ancestorTitles: ['DeveloperClient'],
          failureMessages: [],
          fullName: 'DeveloperClient fastForwardOffset',
          location: null,
          status: 'passed',
          title: 'fastForwardOffset',
        },
        {
          ancestorTitles: ['DeveloperClient'],
          failureMessages: [],
          fullName: 'DeveloperClient fastForwardOffset',
          location: null,
          status: 'passed',
          title: 'fastForwardOffset',
        },
      ],
      endTime: 1533162541622,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/DeveloperClient.test.ts',
      startTime: 1533162541334,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['preconfigured'],
          failureMessages: [],
          fullName: 'preconfigured provider',
          location: null,
          status: 'passed',
          title: 'provider',
        },
        {
          ancestorTitles: ['preconfigured'],
          failureMessages: [],
          fullName: 'preconfigured mainReadClient - no options',
          location: null,
          status: 'passed',
          title: 'mainReadClient - no options',
        },
        {
          ancestorTitles: ['preconfigured'],
          failureMessages: [],
          fullName: 'preconfigured mainReadClient - options',
          location: null,
          status: 'passed',
          title: 'mainReadClient - options',
        },
        {
          ancestorTitles: ['preconfigured'],
          failureMessages: [],
          fullName: 'preconfigured testReadClient - no options',
          location: null,
          status: 'passed',
          title: 'testReadClient - no options',
        },
        {
          ancestorTitles: ['preconfigured'],
          failureMessages: [],
          fullName: 'preconfigured testReadClient - options',
          location: null,
          status: 'passed',
          title: 'testReadClient - options',
        },
        {
          ancestorTitles: ['preconfigured'],
          failureMessages: [],
          fullName: 'preconfigured createReadClient',
          location: null,
          status: 'passed',
          title: 'createReadClient',
        },
      ],
      endTime: 1533162541643,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/preconfigured.test.ts',
      startTime: 1533162541438,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertParameter',
          location: null,
          status: 'passed',
          title: 'convertParameter',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common getParametersObject',
          location: null,
          status: 'passed',
          title: 'getParametersObject',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common getParametersObject throws error on mismatched length',
          location: null,
          status: 'passed',
          title: 'getParametersObject throws error on mismatched length',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertAction returns Log action types immediately',
          location: null,
          status: 'passed',
          title: 'convertAction returns Log action types immediately',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertAction throws error on missing args',
          location: null,
          status: 'passed',
          title: 'convertAction throws error on missing args',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertAction throws error on missing event property',
          location: null,
          status: 'passed',
          title: 'convertAction throws error on missing event property',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertAction on notification action',
          location: null,
          status: 'passed',
          title: 'convertAction on notification action',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertInvocationResult - invocation error',
          location: null,
          status: 'passed',
          title: 'convertInvocationResult - invocation error',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertInvocationResult - invocation succeess',
          location: null,
          status: 'passed',
          title: 'convertInvocationResult - invocation succeess',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertInvocationResult - invocation success with undefined stack',
          location: null,
          status: 'passed',
          title: 'convertInvocationResult - invocation success with undefined stack',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertCallResult throws error on fault',
          location: null,
          status: 'passed',
          title: 'convertCallResult throws error on fault',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertCallResult',
          location: null,
          status: 'passed',
          title: 'convertCallResult',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertCallResult on undefined stack',
          location: null,
          status: 'passed',
          title: 'convertCallResult on undefined stack',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertParams',
          location: null,
          status: 'passed',
          title: 'convertParams',
        },
        {
          ancestorTitles: ['common'],
          failureMessages: [],
          fullName: 'common convertParams throws error on mismatched length',
          location: null,
          status: 'passed',
          title: 'convertParams throws error on mismatched length',
        },
      ],
      endTime: 1533162541657,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/sc/common.test.ts',
      startTime: 1533162541291,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getAccount',
          location: null,
          status: 'passed',
          title: 'getAccount',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getAsset',
          location: null,
          status: 'passed',
          title: 'getAsset',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getBlock',
          location: null,
          status: 'passed',
          title: 'getBlock',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getBlock',
          location: null,
          status: 'passed',
          title: 'getBlock',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient iterBlocks',
          location: null,
          status: 'passed',
          title: 'iterBlocks',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getBestBlockHash',
          location: null,
          status: 'passed',
          title: 'getBestBlockHash',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getBlockCount',
          location: null,
          status: 'passed',
          title: 'getBlockCount',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getContract',
          location: null,
          status: 'passed',
          title: 'getContract',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getMemPool',
          location: null,
          status: 'passed',
          title: 'getMemPool',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getTransaction',
          location: null,
          status: 'passed',
          title: 'getTransaction',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getValidators',
          location: null,
          status: 'passed',
          title: 'getValidators',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getConnectedPeers',
          location: null,
          status: 'passed',
          title: 'getConnectedPeers',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient getStorage',
          location: null,
          status: 'passed',
          title: 'getStorage',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient iterStorage',
          location: null,
          status: 'passed',
          title: 'iterStorage',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient iterActionsRaw',
          location: null,
          status: 'passed',
          title: 'iterActionsRaw',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient call',
          location: null,
          status: 'passed',
          title: 'call',
        },
        {
          ancestorTitles: ['ReadClient'],
          failureMessages: [],
          fullName: 'ReadClient smartContract',
          location: null,
          status: 'passed',
          title: 'smartContract',
        },
      ],
      endTime: 1533162541724,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/ReadClient.test.ts',
      startTime: 1533162541408,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['input'],
          failureMessages: [],
          fullName: 'input converts to input',
          location: null,
          status: 'passed',
          title: 'converts to input',
        },
      ],
      endTime: 1533162541816,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/converters/input.test.ts',
      startTime: 1533162541665,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params String param',
          location: null,
          status: 'passed',
          title: 'String param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Hash160 param',
          location: null,
          status: 'passed',
          title: 'Hash160 param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Hash256 param',
          location: null,
          status: 'passed',
          title: 'Hash256 param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params PublicKey param',
          location: null,
          status: 'passed',
          title: 'PublicKey param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Integer param',
          location: null,
          status: 'passed',
          title: 'Integer param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Boolean param',
          location: null,
          status: 'passed',
          title: 'Boolean param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params ByteArray param',
          location: null,
          status: 'passed',
          title: 'ByteArray param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Signature param',
          location: null,
          status: 'passed',
          title: 'Signature param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Array param throws error on non array',
          location: null,
          status: 'passed',
          title: 'Array param throws error on non array',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Array param',
          location: null,
          status: 'passed',
          title: 'Array param',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params InteropInterface param throws error',
          location: null,
          status: 'passed',
          title: 'InteropInterface param throws error',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Void param throws error',
          location: null,
          status: 'passed',
          title: 'Void param throws error',
        },
        {
          ancestorTitles: ['params'],
          failureMessages: [],
          fullName: 'params Void param',
          location: null,
          status: 'passed',
          title: 'Void param',
        },
      ],
      endTime: 1533162541824,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/sc/params.test.ts',
      startTime: 1533162541656,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['createSmartContract'],
          failureMessages: [],
          fullName: 'createSmartContract NoAccountError',
          location: null,
          status: 'passed',
          title: 'NoAccountError',
        },
        {
          ancestorTitles: ['createSmartContract'],
          failureMessages: [],
          fullName: 'createSmartContract NoContractDeployedError',
          location: null,
          status: 'passed',
          title: 'NoContractDeployedError',
        },
        {
          ancestorTitles: ['createSmartContract'],
          failureMessages: [],
          fullName: 'createSmartContract createCall',
          location: null,
          status: 'passed',
          title: 'createCall',
        },
        {
          ancestorTitles: ['createSmartContract'],
          failureMessages: [],
          fullName: 'createSmartContract createCall - undefined params',
          location: null,
          status: 'passed',
          title: 'createCall - undefined params',
        },
        {
          ancestorTitles: ['createSmartContract'],
          failureMessages: [],
          fullName: 'createSmartContract createInvoke',
          location: null,
          status: 'passed',
          title: 'createInvoke',
        },
        {
          ancestorTitles: ['createSmartContract'],
          failureMessages: [],
          fullName: 'createSmartContract createInvoke undefined events & params',
          location: null,
          status: 'passed',
          title: 'createInvoke undefined events & params',
        },
      ],
      endTime: 1533162541845,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/sc/createSmartContract.test.ts',
      startTime: 1533162541629,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider retries failed requests once',
          location: null,
          status: 'passed',
          title: 'retries failed requests once',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider retries parse error requests three additional times',
          location: null,
          status: 'passed',
          title: 'retries parse error requests three additional times',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider does not retry other responses additional times',
          location: null,
          status: 'passed',
          title: 'does not retry other responses additional times',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider retries http errors and throws error with text',
          location: null,
          status: 'passed',
          title: 'retries http errors and throws error with text',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider retries http errors and catches text errors',
          location: null,
          status: 'passed',
          title: 'retries http errors and catches text errors',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider throws UnknownBlockError',
          location: null,
          status: 'passed',
          title: 'throws UnknownBlockError',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider throws JSONRPCError',
          location: null,
          status: 'passed',
          title: 'throws JSONRPCError',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider watchSingle throws http error and catches text errors',
          location: null,
          status: 'passed',
          title: 'watchSingle throws http error and catches text errors',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider watchSingle successful result',
          location: null,
          status: 'passed',
          title: 'watchSingle successful result',
        },
        {
          ancestorTitles: ['JSONRPCHTTPProvider'],
          failureMessages: [],
          fullName: 'JSONRPCHTTPProvider returns successful result',
          location: null,
          status: 'passed',
          title: 'returns successful result',
        },
      ],
      endTime: 1533162541965,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/provider/neoone/JSONRPCHTTPProvider.test.ts',
      startTime: 1533162541822,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getAccount',
          location: null,
          status: 'passed',
          title: 'getAccount',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getAsset',
          location: null,
          status: 'passed',
          title: 'getAsset',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getBlock',
          location: null,
          status: 'passed',
          title: 'getBlock',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getBlock',
          location: null,
          status: 'passed',
          title: 'getBlock',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getBlock',
          location: null,
          status: 'passed',
          title: 'getBlock',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getBestBlockHash',
          location: null,
          status: 'passed',
          title: 'getBestBlockHash',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getBlockCount',
          location: null,
          status: 'passed',
          title: 'getBlockCount',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getContract',
          location: null,
          status: 'passed',
          title: 'getContract',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getMemPool',
          location: null,
          status: 'passed',
          title: 'getMemPool',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getTransaction',
          location: null,
          status: 'passed',
          title: 'getTransaction',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getStorageItem',
          location: null,
          status: 'passed',
          title: 'getStorageItem',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getUnspentOutput',
          location: null,
          status: 'passed',
          title: 'getUnspentOutput',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient testInvokeRaw',
          location: null,
          status: 'passed',
          title: 'testInvokeRaw',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient sendTransactionRaw',
          location: null,
          status: 'passed',
          title: 'sendTransactionRaw',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient relayTransaction',
          location: null,
          status: 'passed',
          title: 'relayTransaction',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getOutput',
          location: null,
          status: 'passed',
          title: 'getOutput',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getClaimAmount',
          location: null,
          status: 'passed',
          title: 'getClaimAmount',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getAllStorage',
          location: null,
          status: 'passed',
          title: 'getAllStorage',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient testInvocation',
          location: null,
          status: 'passed',
          title: 'testInvocation',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getTransactionReceipt',
          location: null,
          status: 'passed',
          title: 'getTransactionReceipt',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getTransactionReceipt',
          location: null,
          status: 'passed',
          title: 'getTransactionReceipt',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getInvocationData',
          location: null,
          status: 'passed',
          title: 'getInvocationData',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getValidators',
          location: null,
          status: 'passed',
          title: 'getValidators',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getNetworkSettings',
          location: null,
          status: 'passed',
          title: 'getNetworkSettings',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient runConsensusNow',
          location: null,
          status: 'passed',
          title: 'runConsensusNow',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient updateSettings',
          location: null,
          status: 'passed',
          title: 'updateSettings',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient fastForwardOffset',
          location: null,
          status: 'passed',
          title: 'fastForwardOffset',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient fastForwardToTime',
          location: null,
          status: 'passed',
          title: 'fastForwardToTime',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient sendTransactionRaw throws RelayTransactionError',
          location: null,
          status: 'passed',
          title: 'sendTransactionRaw throws RelayTransactionError',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient relayTransaction throws RelayTransactionError',
          location: null,
          status: 'passed',
          title: 'relayTransaction throws RelayTransactionError',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient relayTransaction throws error',
          location: null,
          status: 'passed',
          title: 'relayTransaction throws error',
        },
        {
          ancestorTitles: ['JSONRPCClient'],
          failureMessages: [],
          fullName: 'JSONRPCClient getConnectedPeers',
          location: null,
          status: 'passed',
          title: 'getConnectedPeers',
        },
      ],
      endTime: 1533162542014,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/provider/neoone/JSONRPCClient.test.ts',
      startTime: 1533162541734,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['abi'],
          failureMessages: [],
          fullName: 'abi NEP5',
          location: null,
          status: 'passed',
          title: 'NEP5',
        },
      ],
      endTime: 1533162542054,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/abi.test.ts',
      startTime: 1533162541851,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type String',
          location: null,
          status: 'passed',
          title: 'String',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Hash160',
          location: null,
          status: 'passed',
          title: 'Hash160',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Hash256',
          location: null,
          status: 'passed',
          title: 'Hash256',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type PublicKey',
          location: null,
          status: 'passed',
          title: 'PublicKey',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Boolean',
          location: null,
          status: 'passed',
          title: 'Boolean',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Signature',
          location: null,
          status: 'passed',
          title: 'Signature',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type InteropInterface',
          location: null,
          status: 'passed',
          title: 'InteropInterface',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Void',
          location: null,
          status: 'passed',
          title: 'Void',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Integer',
          location: null,
          status: 'passed',
          title: 'Integer',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Array',
          location: null,
          status: 'passed',
          title: 'Array',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type Boolean from array',
          location: null,
          status: 'passed',
          title: 'Boolean from array',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type nullable parameter',
          location: null,
          status: 'passed',
          title: 'nullable parameter',
        },
        {
          ancestorTitles: ['parameters', 'check parameters of correct type'],
          failureMessages: [],
          fullName: 'parameters check parameters of correct type nullable abi',
          location: null,
          status: 'passed',
          title: 'nullable abi',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors String throws error',
          location: null,
          status: 'passed',
          title: 'String throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors Hash160 throws error',
          location: null,
          status: 'passed',
          title: 'Hash160 throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors Hash256 throws error',
          location: null,
          status: 'passed',
          title: 'Hash256 throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors PublicKey throws error',
          location: null,
          status: 'passed',
          title: 'PublicKey throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors Integer throws error',
          location: null,
          status: 'passed',
          title: 'Integer throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors Signature throws error',
          location: null,
          status: 'passed',
          title: 'Signature throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors Array throws error',
          location: null,
          status: 'passed',
          title: 'Array throws error',
        },
        {
          ancestorTitles: ['parameters', 'incorrect parameter types throw errors'],
          failureMessages: [],
          fullName: 'parameters incorrect parameter types throw errors Array to byte array error',
          location: null,
          status: 'passed',
          title: 'Array to byte array error',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted from byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted from byte array String from bytearray',
          location: null,
          status: 'passed',
          title: 'String from bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted from byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted from byte array Hash160 from bytearray',
          location: null,
          status: 'passed',
          title: 'Hash160 from bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted from byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted from byte array Hash256 from bytearray',
          location: null,
          status: 'passed',
          title: 'Hash256 from bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted from byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted from byte array PublicKey from bytearray',
          location: null,
          status: 'passed',
          title: 'PublicKey from bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted from byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted from byte array Integer from byte array',
          location: null,
          status: 'passed',
          title: 'Integer from byte array',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array Signature to bytearray',
          location: null,
          status: 'passed',
          title: 'Signature to bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array Integer to bytearray',
          location: null,
          status: 'passed',
          title: 'Integer to bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array Hash160 to bytearray',
          location: null,
          status: 'passed',
          title: 'Hash160 to bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array Hash256 to bytearray',
          location: null,
          status: 'passed',
          title: 'Hash256 to bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array ByteArray to bytearray',
          location: null,
          status: 'passed',
          title: 'ByteArray to bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array PublicKey to bytearray',
          location: null,
          status: 'passed',
          title: 'PublicKey to bytearray',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array String to byte array',
          location: null,
          status: 'passed',
          title: 'String to byte array',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array InteropInteface to byte array',
          location: null,
          status: 'passed',
          title: 'InteropInteface to byte array',
        },
        {
          ancestorTitles: ['parameters', 'parameter converted to byte array'],
          failureMessages: [],
          fullName: 'parameters parameter converted to byte array Void to byte array',
          location: null,
          status: 'passed',
          title: 'Void to byte array',
        },
      ],
      endTime: 1533162542080,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/sc/parameters.test.ts',
      startTime: 1533162541829,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['fixedFromDecimal'],
          failureMessages: [],
          fullName: 'fixedFromDecimal converts string to BN',
          location: null,
          status: 'passed',
          title: 'converts string to BN',
        },
        {
          ancestorTitles: ['fixedFromDecimal'],
          failureMessages: [],
          fullName: 'fixedFromDecimal converts number to BN',
          location: null,
          status: 'passed',
          title: 'converts number to BN',
        },
        {
          ancestorTitles: ['fixedFromDecimal'],
          failureMessages: [],
          fullName: 'fixedFromDecimal converts BigNumber to BN',
          location: null,
          status: 'passed',
          title: 'converts BigNumber to BN',
        },
        {
          ancestorTitles: ['fixedFromDecimal'],
          failureMessages: [],
          fullName: 'fixedFromDecimal converts BN to BN',
          location: null,
          status: 'passed',
          title: 'converts BN to BN',
        },
      ],
      endTime: 1533162542146,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client-core/src/__tests__/common.test.ts',
      startTime: 1533162541990,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['NetworkAddress'],
          failureMessages: [],
          fullName: 'NetworkAddress serde ipv4',
          location: null,
          status: 'passed',
          title: 'serde ipv4',
        },
      ],
      endTime: 1533162542237,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-node-protocol/src/__tests__/payload/NetworkAddress.test.ts',
      startTime: 1533162542038,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['LocalStringStore'],
          failureMessages: [],
          fullName: 'LocalStringStore getWallets',
          location: null,
          status: 'passed',
          title: 'getWallets',
        },
        {
          ancestorTitles: ['LocalStringStore'],
          failureMessages: [],
          fullName: 'LocalStringStore saveWallet',
          location: null,
          status: 'passed',
          title: 'saveWallet',
        },
        {
          ancestorTitles: ['LocalStringStore'],
          failureMessages: [],
          fullName: 'LocalStringStore saveWallet throws error missing password for main net wallet',
          location: null,
          status: 'passed',
          title: 'saveWallet throws error missing password for main net wallet',
        },
        {
          ancestorTitles: ['LocalStringStore'],
          failureMessages: [],
          fullName: 'LocalStringStore saveWallet removes privateKey of password protected wallets',
          location: null,
          status: 'passed',
          title: 'saveWallet removes privateKey of password protected wallets',
        },
        {
          ancestorTitles: ['LocalStringStore'],
          failureMessages: [],
          fullName: 'LocalStringStore deleteWallet',
          location: null,
          status: 'passed',
          title: 'deleteWallet',
        },
      ],
      endTime: 1533162542239,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/keystore/LocalStringStore.test.ts',
      startTime: 1533162542060,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers publicKeyToScriptHash',
          location: null,
          status: 'passed',
          title: 'publicKeyToScriptHash',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers publicKeyToAddress',
          location: null,
          status: 'passed',
          title: 'publicKeyToAddress',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers publicKeyToAddress',
          location: null,
          status: 'passed',
          title: 'publicKeyToAddress',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers scriptHashToAddress',
          location: null,
          status: 'passed',
          title: 'scriptHashToAddress',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers scriptHashToAddress',
          location: null,
          status: 'passed',
          title: 'scriptHashToAddress',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers addressToScriptHash',
          location: null,
          status: 'passed',
          title: 'addressToScriptHash',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers addressToScriptHash',
          location: null,
          status: 'passed',
          title: 'addressToScriptHash',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers wifToPrivateKey',
          location: null,
          status: 'passed',
          title: 'wifToPrivateKey',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers wifToPrivateKey',
          location: null,
          status: 'passed',
          title: 'wifToPrivateKey',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers privateKeyToWIF',
          location: null,
          status: 'passed',
          title: 'privateKeyToWIF',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers privateKeyToWIF',
          location: null,
          status: 'passed',
          title: 'privateKeyToWIF',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers privateKeyToScriptHash',
          location: null,
          status: 'passed',
          title: 'privateKeyToScriptHash',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers privateKeyToAddress',
          location: null,
          status: 'passed',
          title: 'privateKeyToAddress',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers privateKeyToAddress',
          location: null,
          status: 'passed',
          title: 'privateKeyToAddress',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers privateKeyToPublicKey',
          location: null,
          status: 'passed',
          title: 'privateKeyToPublicKey',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers isNEP2',
          location: null,
          status: 'passed',
          title: 'isNEP2',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers encryptNEP2',
          location: null,
          status: 'passed',
          title: 'encryptNEP2',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers encryptNEP2',
          location: null,
          status: 'passed',
          title: 'encryptNEP2',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers decryptNEP2',
          location: null,
          status: 'passed',
          title: 'decryptNEP2',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers decryptNEP2',
          location: null,
          status: 'passed',
          title: 'decryptNEP2',
        },
        {
          ancestorTitles: ['helpers'],
          failureMessages: [],
          fullName: 'helpers createPrivateKey',
          location: null,
          status: 'passed',
          title: 'createPrivateKey',
        },
      ],
      endTime: 1533162542344,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/helpers.test.ts',
      startTime: 1533162542162,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['output'],
          failureMessages: [],
          fullName: 'output convert to output - undefined addressVersion',
          location: null,
          status: 'passed',
          title: 'convert to output - undefined addressVersion',
        },
        {
          ancestorTitles: ['output'],
          failureMessages: [],
          fullName: 'output convert to output - addressVersion',
          location: null,
          status: 'passed',
          title: 'convert to output - addressVersion',
        },
      ],
      endTime: 1533162542493,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/converters/output.test.ts',
      startTime: 1533162542253,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts DescriptionUrl to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts DescriptionUrl to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Description to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Description to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark1 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark1 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark2 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark2 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark3 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark3 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark4 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark4 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark5 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark5 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark6 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark6 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark7 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark7 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark8 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark8 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark9 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark9 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark10 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark10 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark11 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark11 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark12 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark12 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark13 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark13 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark14 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark14 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Remark15 to BufferAttribute',
          location: null,
          status: 'passed',
          title: 'converts Remark15 to BufferAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts ECDH02 to ECPointAttribute',
          location: null,
          status: 'passed',
          title: 'converts ECDH02 to ECPointAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts ECDH03 to ECPointAttribute',
          location: null,
          status: 'passed',
          title: 'converts ECDH03 to ECPointAttribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Script to UInt160Attribute',
          location: null,
          status: 'passed',
          title: 'converts Script to UInt160Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts ContractHash to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts ContractHash to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Vote to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Vote to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash1 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash1 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash2 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash2 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash3 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash3 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash4 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash4 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash5 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash5 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash6 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash6 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash7 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash7 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash8 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash8 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash9 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash9 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash10 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash10 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash11 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash11 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash12 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash12 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash13 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash13 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash14 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash14 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute converts Hash15 to UInt256Attribute',
          location: null,
          status: 'passed',
          title: 'converts Hash15 to UInt256Attribute',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute throws error on other input',
          location: null,
          status: 'passed',
          title: 'throws error on other input',
        },
        {
          ancestorTitles: ['attribute'],
          failureMessages: [],
          fullName: 'attribute throws error on usage',
          location: null,
          status: 'passed',
          title: 'throws error on usage',
        },
      ],
      endTime: 1533162542509,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/converters/attribute.test.ts',
      startTime: 1533162542255,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['utils'],
          failureMessages: [],
          fullName: 'utils bigNumberToBN',
          location: null,
          status: 'passed',
          title: 'bigNumberToBN',
        },
        {
          ancestorTitles: ['utils'],
          failureMessages: [],
          fullName: 'utils getInvokeMethodInvocationScript',
          location: null,
          status: 'passed',
          title: 'getInvokeMethodInvocationScript',
        },
        {
          ancestorTitles: ['utils'],
          failureMessages: [],
          fullName: 'utils getInvokeMethodScript',
          location: null,
          status: 'passed',
          title: 'getInvokeMethodScript',
        },
      ],
      endTime: 1533162542523,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/utils.test.ts',
      startTime: 1533162542349,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['LocalMemoryStore'],
          failureMessages: [],
          fullName: 'LocalMemoryStore type',
          location: null,
          status: 'passed',
          title: 'type',
        },
        {
          ancestorTitles: ['LocalMemoryStore'],
          failureMessages: [],
          fullName: 'LocalMemoryStore getWallets',
          location: null,
          status: 'passed',
          title: 'getWallets',
        },
        {
          ancestorTitles: ['LocalMemoryStore'],
          failureMessages: [],
          fullName: 'LocalMemoryStore saveWallet',
          location: null,
          status: 'passed',
          title: 'saveWallet',
        },
        {
          ancestorTitles: ['LocalMemoryStore'],
          failureMessages: [],
          fullName: 'LocalMemoryStore deleteWallet',
          location: null,
          status: 'passed',
          title: 'deleteWallet',
        },
      ],
      endTime: 1533162542590,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/keystore/LocalMemoryStore.test.ts',
      startTime: 1533162542499,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['witness'],
          failureMessages: [],
          fullName: 'witness convert to witness',
          location: null,
          status: 'passed',
          title: 'convert to witness',
        },
      ],
      endTime: 1533162542666,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-client/src/__tests__/user/converters/witness.test.ts',
      startTime: 1533162542518,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ElementAccessExpressionCompiler'],
          failureMessages: [],
          fullName: 'ElementAccessExpressionCompiler [0, 1, 2][idx] and ["idx"] and properties',
          location: null,
          status: 'pending',
          title: '[0, 1, 2][idx] and ["idx"] and properties',
        },
      ],
      endTime: 1533162542669,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/expression/ElementAccessExpressionCompiler.test.ts',
      startTime: 1533162542090,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['InterfaceDeclarationCompiler'],
          failureMessages: [],
          fullName: 'InterfaceDeclarationCompiler Interface type as value reports error',
          location: null,
          status: 'passed',
          title: 'Interface type as value reports error',
        },
      ],
      endTime: 1533162543068,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/declaration/InterfaceDeclarationCompiler.test.ts',
      startTime: 1533162539966,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['ImportDeclarationCompiler'],
          failureMessages: [],
          fullName: 'ImportDeclarationCompiler basic imports at import/entry.ts',
          location: null,
          status: 'passed',
          title: 'basic imports at import/entry.ts',
        },
      ],
      endTime: 1533162543340,
      message: '',
      name:
        '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-compiler/src/__tests__/compile/declaration/ImportDeclarationCompiler.test.ts',
      startTime: 1533162534218,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['TestToken'],
          failureMessages: [],
          fullName: 'TestToken properties + issue + balanceOf + totalSupply + transfer',
          location: null,
          status: 'passed',
          title: 'properties + issue + balanceOf + totalSupply + transfer',
        },
      ],
      endTime: 1533162544873,
      message: '',
      name: '/Users/davem/projects/neo-one/packages/neo-one-smart-contract-lib/src/__tests__/TestToken.test.ts',
      startTime: 1533162490212,
      status: 'passed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};
export const simplePassingTest = {
  numFailedTestSuites: 0,
  numFailedTests: 0,
  numPassedTestSuites: 2,
  numPassedTests: 4,
  numPendingTestSuites: 0,
  numPendingTests: 0,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 2,
  numTotalTests: 4,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: false,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 0,
    filesUpdated: 0,
    matched: 0,
    total: 0,
    unchecked: 0,
    uncheckedKeysByFile: [],
    unmatched: 0,
    updated: 0,
  },
  startTime: 1533072299348,
  success: true,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['FromStream'],
          failureMessages: [],
          fullName: 'FromStream renders stream of props',
          location: null,
          status: 'passed',
          title: 'renders stream of props',
        },
        {
          ancestorTitles: ['FromStream'],
          failureMessages: [],
          fullName: 'FromStream subscribes to new props stream',
          location: null,
          status: 'passed',
          title: 'subscribes to new props stream',
        },
        {
          ancestorTitles: ['FromStream'],
          failureMessages: [],
          fullName: 'FromStream returns null on no value',
          location: null,
          status: 'passed',
          title: 'returns null on no value',
        },
      ],
      endTime: 1533072306881,
      message: '',
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-shared-web-next/src/__tests__/browser/components/render/FromStream.test.tsx',
      startTime: 1533072300503,
      status: 'passed',
      summary: '',
    },
    {
      assertionResults: [
        {
          ancestorTitles: ['Query'],
          failureMessages: [],
          fullName: 'Query renders',
          location: null,
          status: 'passed',
          title: 'renders',
        },
      ],
      endTime: 1533072306934,
      message: '',
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-shared-web-next/src/__tests__/browser/components/render/Query.test.tsx',
      startTime: 1533072300549,
      status: 'passed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};

export const dbConnectivityIssueTest = {
  numFailedTestSuites: 1,
  numFailedTests: 3,
  numPassedTestSuites: 0,
  numPassedTests: 0,
  numPendingTestSuites: 0,
  numPendingTests: 0,
  numRuntimeErrorTestSuites: 0,
  numTotalTestSuites: 1,
  numTotalTests: 3,
  openHandles: [],
  snapshot: {
    added: 0,
    didUpdate: false,
    failure: false,
    filesAdded: 0,
    filesRemoved: 0,
    filesUnmatched: 0,
    filesUpdated: 0,
    matched: 0,
    total: 0,
    unchecked: 0,
    uncheckedKeysByFile: [],
    unmatched: 0,
    updated: 0,
  },
  startTime: 1532933458263,
  success: false,
  testResults: [
    {
      assertionResults: [
        {
          ancestorTitles: ['ActionsUpdater'],
          failureMessages: [
            "Error: Failed to start postgres:\nError: FetchError: request to http://localhost:21953/ready_health_check failed, reason: connect ECONNREFUSED 127.0.0.1:21953\n    at ClientRequest.<anonymous> (/home/postgres/neotracker-internal/node_modules/node-fetch/lib/index.js:1393:11)\n    at ClientRequest.emit (events.js:182:13)\n    at Socket.socketErrorListener (_http_client.js:382:9)\n    at Socket.emit (events.js:182:13)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)\nstdout: \nstderr:internal/modules/cjs/loader.js:583\n    throw err;\n    ^\n\nError: Cannot find module '/home/postgres/neotracker-internal/packages/neotracker-internal-server-postgres/build/postgres/index.js'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:581:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:507:25)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:742:12)\n    at startup (internal/bootstrap/node.js:236:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:560:3)\n\n    at module.exports (/home/postgres/neotracker-internal/packages/neotracker-internal-server-test/src/jest/checkReady.js:42:11)",
            "TypeError: Cannot read property 'reset' of undefined\n    at Object.beforeEach (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:31:20)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:63:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)",
            "TypeError: Cannot read property 'client' of undefined\n    at getDialect (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/knexUtils.ts:4:12)\n    at Object.isPostgres (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/knexUtils.ts:12:10)\n    at Function.insertAllBase (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/lib/Base.ts:55:25)\n    at Function.insertAll (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/models/Action.ts:122:17)\n    at Promise.all.lodash_1.default.chunk.map (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:26:25)\n    at Array.map (<anonymous>)\n    at monitor.captureSpan (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:25:47)\n    at NodeMonitor.captureSpan (/home/postgres/neotracker-internal/node_modules/@neo-one/monitor-es2018-cjs/src/MonitorBase.ts:359:22)\n    at ActionsUpdater.save (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:22:20)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:38:19)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)",
          ],
          fullName: 'ActionsUpdater inserts actions',
          location: null,
          status: 'failed',
          title: 'inserts actions',
        },
        {
          ancestorTitles: ['ActionsUpdater'],
          failureMessages: [
            "Error: Failed to start postgres:\nError: FetchError: request to http://localhost:21953/ready_health_check failed, reason: connect ECONNREFUSED 127.0.0.1:21953\n    at ClientRequest.<anonymous> (/home/postgres/neotracker-internal/node_modules/node-fetch/lib/index.js:1393:11)\n    at ClientRequest.emit (events.js:182:13)\n    at Socket.socketErrorListener (_http_client.js:382:9)\n    at Socket.emit (events.js:182:13)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)\nstdout: \nstderr:internal/modules/cjs/loader.js:583\n    throw err;\n    ^\n\nError: Cannot find module '/home/postgres/neotracker-internal/packages/neotracker-internal-server-postgres/build/postgres/index.js'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:581:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:507:25)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:742:12)\n    at startup (internal/bootstrap/node.js:236:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:560:3)\n\n    at module.exports (/home/postgres/neotracker-internal/packages/neotracker-internal-server-test/src/jest/checkReady.js:42:11)",
            "TypeError: Cannot read property 'reset' of undefined\n    at Object.beforeEach (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:31:20)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:63:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)",
            "TypeError: Cannot read property 'client' of undefined\n    at getDialect (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/knexUtils.ts:4:12)\n    at Object.isPostgres (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/knexUtils.ts:12:10)\n    at Function.insertAllBase (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/lib/Base.ts:55:25)\n    at Function.insertAll (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/models/Action.ts:122:17)\n    at Promise.all.lodash_1.default.chunk.map (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:26:25)\n    at Array.map (<anonymous>)\n    at monitor.captureSpan (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:25:47)\n    at NodeMonitor.captureSpan (/home/postgres/neotracker-internal/node_modules/@neo-one/monitor-es2018-cjs/src/MonitorBase.ts:359:22)\n    at ActionsUpdater.save (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:22:20)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:57:19)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)",
          ],
          fullName: 'ActionsUpdater handles duplicate inserts',
          location: null,
          status: 'failed',
          title: 'handles duplicate inserts',
        },
        {
          ancestorTitles: ['ActionsUpdater'],
          failureMessages: [
            "Error: Failed to start postgres:\nError: FetchError: request to http://localhost:21953/ready_health_check failed, reason: connect ECONNREFUSED 127.0.0.1:21953\n    at ClientRequest.<anonymous> (/home/postgres/neotracker-internal/node_modules/node-fetch/lib/index.js:1393:11)\n    at ClientRequest.emit (events.js:182:13)\n    at Socket.socketErrorListener (_http_client.js:382:9)\n    at Socket.emit (events.js:182:13)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)\nstdout: \nstderr:internal/modules/cjs/loader.js:583\n    throw err;\n    ^\n\nError: Cannot find module '/home/postgres/neotracker-internal/packages/neotracker-internal-server-postgres/build/postgres/index.js'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:581:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:507:25)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:742:12)\n    at startup (internal/bootstrap/node.js:236:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:560:3)\n\n    at module.exports (/home/postgres/neotracker-internal/packages/neotracker-internal-server-test/src/jest/checkReady.js:42:11)",
            "TypeError: Cannot read property 'reset' of undefined\n    at Object.beforeEach (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:31:20)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:63:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)",
            "TypeError: Cannot read property 'client' of undefined\n    at getDialect (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/knexUtils.ts:4:12)\n    at Object.isPostgres (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/knexUtils.ts:12:10)\n    at Function.insertAllBase (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/lib/Base.ts:55:25)\n    at Function.insertAll (/home/postgres/neotracker-internal/packages/neotracker-server-db/src/models/Action.ts:122:17)\n    at Promise.all.lodash_1.default.chunk.map (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:26:25)\n    at Array.map (<anonymous>)\n    at monitor.captureSpan (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:25:47)\n    at NodeMonitor.captureSpan (/home/postgres/neotracker-internal/node_modules/@neo-one/monitor-es2018-cjs/src/MonitorBase.ts:359:22)\n    at ActionsUpdater.save (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:22:20)\n    at Object.test (/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:71:19)\n    at Object.asyncFn (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/postgres/neotracker-internal/node_modules/jest-jasmine2/build/queue_runner.js:87:41)",
          ],
          fullName: 'ActionsUpdater reverts actions',
          location: null,
          status: 'failed',
          title: 'reverts actions',
        },
      ],
      endTime: 1532933616055,
      message:
        "  ● ActionsUpdater › inserts actions\n\n    Failed to start postgres:\n    Error: FetchError: request to http://localhost:21953/ready_health_check failed, reason: connect ECONNREFUSED 127.0.0.1:21953\n\n      40 |     );\n      41 |   } catch (error) {\n    > 42 |     throw new Error(\n         |           ^\n      43 |       `Failed to start ${component}:\\nError: ${\n      44 |         error.stack\n      45 |       }\\nstdout: ${stdout}\\nstderr:${stderr}`,\n\n      at ClientRequest.<anonymous> (node_modules/node-fetch/lib/index.js:1393:11)\n      stdout: \n      stderr:internal/modules/cjs/loader.js:583\n          throw err;\n          ^\n      Error: Cannot find module '/home/postgres/neotracker-internal/packages/neotracker-internal-server-postgres/build/postgres/index.js'\n      at module.exports (packages/neotracker-internal-server-test/src/jest/checkReady.js:42:11)\n\n  ● ActionsUpdater › inserts actions\n\n    TypeError: Cannot read property 'reset' of undefined\n\n      29 | \n      30 |   beforeEach(async () => {\n    > 31 |     await database.reset();\n         |                    ^\n      32 |   });\n      33 | \n      34 |   test('inserts actions', async () => {\n\n      at Object.beforeEach (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:31:20)\n\n  ● ActionsUpdater › inserts actions\n\n    TypeError: Cannot read property 'client' of undefined\n\n      2 | \n      3 | function getDialect(knex: Knex): string | undefined {\n    > 4 |   if (knex.client !== undefined && knex.client.dialect !== undefined) {\n        |            ^\n      5 |     return knex.client.dialect;\n      6 |   }\n      7 | \n\n      at getDialect (packages/neotracker-server-db/src/knexUtils.ts:4:12)\n      at Object.isPostgres (packages/neotracker-server-db/src/knexUtils.ts:12:10)\n      at Function.insertAllBase (packages/neotracker-server-db/src/lib/Base.ts:55:25)\n      at Function.insertAll (packages/neotracker-server-db/src/models/Action.ts:122:17)\n      at Promise.all.lodash_1.default.chunk.map (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:26:25)\n          at Array.map (<anonymous>)\n      at monitor.captureSpan (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:25:47)\n      at NodeMonitor.captureSpan (node_modules/@neo-one/monitor-es2018-cjs/src/MonitorBase.ts:359:22)\n      at ActionsUpdater.save (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:22:20)\n      at Object.test (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:38:19)\n\n  ● ActionsUpdater › handles duplicate inserts\n\n    Failed to start postgres:\n    Error: FetchError: request to http://localhost:21953/ready_health_check failed, reason: connect ECONNREFUSED 127.0.0.1:21953\n\n      40 |     );\n      41 |   } catch (error) {\n    > 42 |     throw new Error(\n         |           ^\n      43 |       `Failed to start ${component}:\\nError: ${\n      44 |         error.stack\n      45 |       }\\nstdout: ${stdout}\\nstderr:${stderr}`,\n\n      at ClientRequest.<anonymous> (node_modules/node-fetch/lib/index.js:1393:11)\n      stdout: \n      stderr:internal/modules/cjs/loader.js:583\n          throw err;\n          ^\n      Error: Cannot find module '/home/postgres/neotracker-internal/packages/neotracker-internal-server-postgres/build/postgres/index.js'\n      at module.exports (packages/neotracker-internal-server-test/src/jest/checkReady.js:42:11)\n\n  ● ActionsUpdater › handles duplicate inserts\n\n    TypeError: Cannot read property 'reset' of undefined\n\n      29 | \n      30 |   beforeEach(async () => {\n    > 31 |     await database.reset();\n         |                    ^\n      32 |   });\n      33 | \n      34 |   test('inserts actions', async () => {\n\n      at Object.beforeEach (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:31:20)\n\n  ● ActionsUpdater › handles duplicate inserts\n\n    TypeError: Cannot read property 'client' of undefined\n\n      2 | \n      3 | function getDialect(knex: Knex): string | undefined {\n    > 4 |   if (knex.client !== undefined && knex.client.dialect !== undefined) {\n        |            ^\n      5 |     return knex.client.dialect;\n      6 |   }\n      7 | \n\n      at getDialect (packages/neotracker-server-db/src/knexUtils.ts:4:12)\n      at Object.isPostgres (packages/neotracker-server-db/src/knexUtils.ts:12:10)\n      at Function.insertAllBase (packages/neotracker-server-db/src/lib/Base.ts:55:25)\n      at Function.insertAll (packages/neotracker-server-db/src/models/Action.ts:122:17)\n      at Promise.all.lodash_1.default.chunk.map (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:26:25)\n          at Array.map (<anonymous>)\n      at monitor.captureSpan (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:25:47)\n      at NodeMonitor.captureSpan (node_modules/@neo-one/monitor-es2018-cjs/src/MonitorBase.ts:359:22)\n      at ActionsUpdater.save (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:22:20)\n      at Object.test (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:57:19)\n\n  ● ActionsUpdater › reverts actions\n\n    Failed to start postgres:\n    Error: FetchError: request to http://localhost:21953/ready_health_check failed, reason: connect ECONNREFUSED 127.0.0.1:21953\n\n      40 |     );\n      41 |   } catch (error) {\n    > 42 |     throw new Error(\n         |           ^\n      43 |       `Failed to start ${component}:\\nError: ${\n      44 |         error.stack\n      45 |       }\\nstdout: ${stdout}\\nstderr:${stderr}`,\n\n      at ClientRequest.<anonymous> (node_modules/node-fetch/lib/index.js:1393:11)\n      stdout: \n      stderr:internal/modules/cjs/loader.js:583\n          throw err;\n          ^\n      Error: Cannot find module '/home/postgres/neotracker-internal/packages/neotracker-internal-server-postgres/build/postgres/index.js'\n      at module.exports (packages/neotracker-internal-server-test/src/jest/checkReady.js:42:11)\n\n  ● ActionsUpdater › reverts actions\n\n    TypeError: Cannot read property 'reset' of undefined\n\n      29 | \n      30 |   beforeEach(async () => {\n    > 31 |     await database.reset();\n         |                    ^\n      32 |   });\n      33 | \n      34 |   test('inserts actions', async () => {\n\n      at Object.beforeEach (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:31:20)\n\n  ● ActionsUpdater › reverts actions\n\n    TypeError: Cannot read property 'client' of undefined\n\n      2 | \n      3 | function getDialect(knex: Knex): string | undefined {\n    > 4 |   if (knex.client !== undefined && knex.client.dialect !== undefined) {\n        |            ^\n      5 |     return knex.client.dialect;\n      6 |   }\n      7 | \n\n      at getDialect (packages/neotracker-server-db/src/knexUtils.ts:4:12)\n      at Object.isPostgres (packages/neotracker-server-db/src/knexUtils.ts:12:10)\n      at Function.insertAllBase (packages/neotracker-server-db/src/lib/Base.ts:55:25)\n      at Function.insertAll (packages/neotracker-server-db/src/models/Action.ts:122:17)\n      at Promise.all.lodash_1.default.chunk.map (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:26:25)\n          at Array.map (<anonymous>)\n      at monitor.captureSpan (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:25:47)\n      at NodeMonitor.captureSpan (node_modules/@neo-one/monitor-es2018-cjs/src/MonitorBase.ts:359:22)\n      at ActionsUpdater.save (packages/neotracker-server-scrape/src/db/ActionsUpdater.ts:22:20)\n      at Object.test (packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts:71:19)\n",
      name:
        '/home/postgres/neotracker-internal/packages/neotracker-server-scrape/src/__tests__/e2e/db/ActionsUpdater.test.ts',
      startTime: 1532933458398,
      status: 'failed',
      summary: '',
    },
  ],
  wasInterrupted: false,
};
